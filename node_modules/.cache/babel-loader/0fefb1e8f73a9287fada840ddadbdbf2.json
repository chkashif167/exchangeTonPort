{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\dashboard\\\\userpanel\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { countryList } from \"../../../constants/country.json\";\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { Button, Container } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Security from \"@material-ui/icons/Security\";\nimport Email from \"@material-ui/icons/Email\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { typography } from \"@material-ui/system\";\nimport axios from \"axios\";\nimport config from \"../../../config/config\";\nimport Image from \"material-ui-image\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport validator from \"validator\";\nimport { NotificationManager } from \"react-notifications\";\nimport ProfileDefaultImg from \"../../../assets/profile_default.jpg\";\nimport BackLink from \"../../../components/backline\";\nimport { connect } from \"react-redux\";\nimport t from \"../../../constants/language\";\nimport Payment from \"@material-ui/icons/Payment\";\nimport { BrowserView, MobileView, isBrowser, isMobile } from \"react-device-detect\";\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  toolbar: theme.mixins.toolbar,\n  formGroup: {\n    maxWidth: 320,\n    padding: 16\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  },\n  group: {\n    margin: theme.spacing(1, 0)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) // width: 400,\n\n  },\n  card: {\n    maxWidth: 400,\n    minWidth: 240\n  },\n  cardheader: {\n    backgroundColor: \"#3f51b5\",\n    color: \"#fff\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  },\n  dialog: {\n    maxWidth: 500\n  }\n});\n\nclass UserPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveProfileInfo = () => {\n      const _this$state = this.state,\n            gender = _this$state.gender,\n            lastname = _this$state.lastname,\n            firstname = _this$state.firstname,\n            languageforCorrespondance = _this$state.languageforCorrespondance,\n            email = _this$state.email,\n            phonenumber = _this$state.phonenumber,\n            address = _this$state.address,\n            address2 = _this$state.address2,\n            postCode = _this$state.postCode,\n            townCity = _this$state.townCity,\n            country = _this$state.country,\n            profilePicture = _this$state.profilePicture;\n      axios.request({\n        url: \"/api/dashboard/profile\",\n        baseURL: config.apiBaseUrl,\n        method: \"PUT\",\n        data: {\n          lastname: lastname,\n          firstname: firstname,\n          email: email,\n          gender: gender,\n          languageforCorrespondance: languageforCorrespondance,\n          phonenumber: phonenumber,\n          address: address,\n          address2: address2,\n          postCode: postCode,\n          townCity: townCity,\n          country: country // profilePicture: profilePicture\n\n        }\n      }).then(res => {\n        console.log(\"saveProfile\", res);\n        NotificationManager.success(t[this.props.lang].profile_saved_successfully);\n      }).catch(err => {\n        console.log(\"saveProfile Error\", err);\n        NotificationManager.error(t[this.props.lang].failed_to_save_profile);\n      });\n    };\n\n    this.getProfileInfo = () => {\n      console.log(\"get profile started\");\n      axios.request({\n        url: \"/api/dashboard/profile\",\n        baseURL: config.apiBaseUrl,\n        method: \"GET\"\n      }).then(res => {\n        console.log(\"get Profile\", res.data);\n        this.setState({\n          lastname: res.data.user_id.lastname,\n          firstname: res.data.user_id.firstname,\n          email: res.data.user_id.email,\n          phonenumber: res.data.user_id.phonenumber,\n          gender: res.data.gender,\n          languageforCorrespondance: res.data.languageforCorrespondance,\n          address: res.data.address,\n          address2: res.data.address2,\n          postCode: res.data.postCode,\n          townCity: res.data.townCity,\n          country: res.data.country,\n          profilePicture: res.data.avatar ? config.apiBaseUrl + res.data.avatar : \"\",\n          acceptCount: res.data.acceptCount\n        });\n      }).catch(err => {\n        console.log(\"get profile error\", err);\n      });\n    };\n\n    this.handleTextInput = input => e => {\n      this.setState({\n        [input]: e.target.value\n      }, function () {\n        if ([input] == \"newPassword2\") {\n          if (this.state.newPassword === this.state.newPassword2) {\n            this.setState({\n              isValidPassword2: true\n            });\n          } else {\n            this.setState({\n              isValidPassword2: false\n            });\n          }\n        }\n      });\n    };\n\n    this.handleBirthOfDate = (data, val) => {\n      console.log(\"tag\", val);\n      this.setState({\n        dateOfBirth: val\n      });\n    };\n\n    this.handleSelectedAvatar = event => {\n      if (event.target.files.length === 0) {\n        return;\n      } // this.setState({ selectedFile: event.target.files[0]});\n      // this.getPreviewData(event.target.files[0]);\n\n\n      let uploadFile = event.target.files[0];\n      const data = new FormData();\n      data.append(\"file\", uploadFile);\n      axios.request({\n        url: \"/api/dashboard/avatar\",\n        baseURL: config.apiBaseUrl,\n        method: \"post\",\n        data: data,\n        onUploadProgress: progressEvent => {\n          var percent = progressEvent.loaded * 100 / progressEvent.total; // this.setState({ upload_progress: percent });\n        }\n      }).then(res => {\n        this.setState({\n          profilePicture: config.apiBaseUrl + res.data.path,\n          count: this.state.count + 1\n        });\n        this.props.dispatch({\n          type: \"AVATAR_CHANGED\",\n          payload: res.data.path + \"?\" + this.state.count\n        });\n      }).catch(err => {\n        console.log(\"avatar err\", err);\n      });\n    };\n\n    this.handleEmailDlgClose = () => {\n      this.setState({\n        changeEmailDlg: !this.state.changeEmailDlg\n      });\n    };\n\n    this.handleEmailChange = () => {\n      if (!this.state.newEmail) return;\n\n      if (!validator.isEmail(this.state.newEmail)) {\n        this.setState({\n          newEmailValid: false\n        });\n        return;\n      }\n\n      axios.request({\n        url: \"/api/dashboard/changeemail\",\n        baseURL: config.apiBaseUrl,\n        method: \"POST\",\n        data: {\n          email: this.state.newEmail\n        }\n      }).then(res => {\n        console.log(\"email changing\", res.data);\n        this.setState({\n          email: res.data.email,\n          changeEmailDlg: false\n        });\n        NotificationManager.success(t[this.props.lang].success);\n      }).catch(err => {\n        console.log(\"email changing err\", err);\n        NotificationManager.error(t[this.props.lang].failed);\n      });\n    };\n\n    this.handlePasswordClose = () => {\n      this.setState({\n        resetPwdDlg: !this.state.resetPwdDlg\n      });\n    };\n\n    this.handlePasswordChange = () => {\n      if (this.state.newPassword2.length > 0 && this.state.isValidPassword2) {\n        const passwordData = {\n          oldPassword: this.state.oldPassword,\n          newPassword: this.state.newPassword\n        };\n        axios.request({\n          url: \"/api/dashboard/passwordchange\",\n          baseURL: config.apiBaseUrl,\n          method: \"post\",\n          data: passwordData\n        }).then(res => {\n          NotificationManager.success(t[this.props.lang].password_changed);\n          this.handlePasswordClose();\n        }).catch(err => {\n          console.log(\"password changing err\", err);\n          NotificationManager.error(t[this.props.lang].password_change_is_failed);\n        }); // this.handlePasswordClose();\n      }\n    };\n\n    this.state = {\n      gender: \"male\",\n      lastname: \"\",\n      firstname: \"\",\n      languageforCorrespondance: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      address: \"\",\n      address2: \"\",\n      postCode: \"\",\n      townCity: \"\",\n      country: \"\",\n      profilePicture: \"\",\n      count: 0,\n      resetPwdDlg: false,\n      oldPassword: \"\",\n      newPassword: \"\",\n      newPassword2: \"\",\n      isValidPassword2: true,\n      newEmail: \"\",\n      changeEmailDlg: false,\n      newEmailValid: true,\n      acceptCount: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getProfileInfo();\n  }\n\n  selectCountry(val) {\n    this.setState({\n      nationality: val\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state2 = this.state,\n          gender = _this$state2.gender,\n          lastname = _this$state2.lastname,\n          firstname = _this$state2.firstname,\n          languageforCorrespondance = _this$state2.languageforCorrespondance,\n          email = _this$state2.email,\n          phonenumber = _this$state2.phonenumber,\n          address = _this$state2.address,\n          address2 = _this$state2.address2,\n          postCode = _this$state2.postCode,\n          townCity = _this$state2.townCity,\n          country = _this$state2.country,\n          profilePicture = _this$state2.profilePicture,\n          resetPwdDlg = _this$state2.resetPwdDlg,\n          oldPassword = _this$state2.oldPassword,\n          newPassword = _this$state2.newPassword,\n          newPassword2 = _this$state2.newPassword2,\n          isValidPassword2 = _this$state2.isValidPassword2,\n          changeEmailDlg = _this$state2.changeEmailDlg,\n          newEmail = _this$state2.newEmail,\n          newEmailValid = _this$state2.newEmailValid;\n    return React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: classes.formGroup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, t[this.props.lang].profil), React.createElement(FormControl, {\n      required: true,\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364\n      },\n      __self: this\n    }, t[this.props.lang].civility), React.createElement(Select, {\n      value: gender,\n      onChange: this.handleTextInput(\"gender\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"Mr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, t[this.props.lang].mr), React.createElement(MenuItem, {\n      value: \"Mrs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, t[this.props.lang].mrs), React.createElement(MenuItem, {\n      value: \"Ms\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, t[this.props.lang].ms))), React.createElement(TextField, {\n      required: true,\n      id: \"firstname\",\n      label: t[this.props.lang].first_name,\n      placeholder: t[this.props.lang].enter_your_first_name,\n      className: classes.textField,\n      margin: \"normal\",\n      value: firstname,\n      onChange: this.handleTextInput(\"firstname\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"lastname\",\n      label: t[this.props.lang].last_name,\n      placeholder: t[this.props.lang].last_name,\n      className: classes.textField,\n      margin: \"normal\",\n      value: lastname,\n      onChange: this.handleTextInput(\"lastname\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"languageforcorrespond\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, t[this.props.lang].language), React.createElement(Select, {\n      value: languageforCorrespondance,\n      onChange: this.handleTextInput(\"languageforCorrespondance\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: \"english\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, t[this.props.lang].english), React.createElement(MenuItem, {\n      value: \"french\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, t[this.props.lang].french))), React.createElement(TextField, {\n      required: true,\n      id: \"email\",\n      label: t[this.props.lang].email,\n      placeholder: t[this.props.lang].enter_your_email,\n      className: classes.textField,\n      margin: \"normal\",\n      InputProps: {\n        readOnly: true\n      },\n      value: email,\n      onChange: this.handleTextInput(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"phonenumber\",\n      label: t[this.props.lang].phone_number,\n      placeholder: t[this.props.lang].enter_your_phone_number,\n      className: classes.textField,\n      margin: \"normal\",\n      value: phonenumber,\n      onChange: this.handleTextInput(\"phonenumber\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      style: {\n        marginBottom: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441\n      },\n      __self: this\n    }, t[this.props.lang].address), React.createElement(TextField, {\n      id: \"address\",\n      label: t[this.props.lang].address,\n      placeholder: t[this.props.lang].enter_your_addres,\n      className: classes.textField,\n      margin: \"normal\",\n      value: address,\n      onChange: this.handleTextInput(\"address\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"address2\",\n      label: t[this.props.lang].address2,\n      placeholder: t[this.props.lang].enter_your_addres,\n      className: classes.textField,\n      margin: \"normal\",\n      value: address2,\n      onChange: this.handleTextInput(\"address2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"postcode\",\n      label: t[this.props.lang].postcode,\n      placeholder: t[this.props.lang].enter_your_postcode,\n      className: classes.textField,\n      margin: \"normal\",\n      value: postCode,\n      onChange: this.handleTextInput(\"postCode\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"towncity\",\n      label: t[this.props.lang].town_city,\n      placeholder: t[this.props.lang].enter_your_city,\n      className: classes.textField,\n      margin: \"normal\",\n      value: townCity,\n      onChange: this.handleTextInput(\"townCity\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483\n      },\n      __self: this\n    }, t[this.props.lang].country), React.createElement(Select, {\n      value: country,\n      onChange: this.handleTextInput(\"country\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, countryList.map((item, index) => {\n      return React.createElement(MenuItem, {\n        key: index,\n        value: item.name[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      }, item.name[this.props.lang]);\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      style: {\n        marginLeft: 16\n      },\n      onClick: this.saveProfileInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499\n      },\n      __self: this\n    }, t[this.props.lang].save_my_profile)))), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        margin: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: t[this.props.lang].profile_picture,\n      className: classes.cardheader,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      style: {\n        margin: 20,\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(Image, {\n      alt: \"avatar img\",\n      src: this.state.profilePicture ? this.state.profilePicture + \"?\" + this.state.count : ProfileDefaultImg,\n      imageStyle: {\n        width: 180,\n        height: \"auto\",\n        position: \"relative\" // maxWidth: 200,\n        // maxHeight: 300\n\n      },\n      style: {\n        paddingTop: 0\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    })), React.createElement(CardActions, {\n      disableSpacing: true,\n      style: {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      component: \"label\",\n      className: classes.button,\n      style: {\n        marginBottom: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      accept: \"Image/*\",\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      onChange: this.handleSelectedAvatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }), t[this.props.lang].add_profile_picture))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }), React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: t[this.props.lang].security,\n      className: classes.cardheader,\n      avatar: React.createElement(Security, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }, t[this.props.lang].password), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: () => this.setState({\n        resetPwdDlg: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, t[this.props.lang].change_password), React.createElement(Dialog, {\n      open: resetPwdDlg,\n      onClose: this.handlePasswordClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }, t[this.props.lang].change_password), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      margin: \"dense\",\n      id: \"name\",\n      label: t[this.props.lang].old_password,\n      type: \"password\",\n      fullWidth: true,\n      value: oldPassword,\n      onChange: this.handleTextInput(\"oldPassword\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"name\",\n      label: t[this.props.lang].new_password,\n      type: \"password\",\n      fullWidth: true,\n      value: newPassword,\n      onChange: this.handleTextInput(\"newPassword\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      margin: \"dense\",\n      id: \"name\",\n      label: t[this.props.lang].confirm_password,\n      type: \"password\",\n      fullWidth: true,\n      error: !isValidPassword2,\n      value: newPassword2,\n      onChange: this.handleTextInput(\"newPassword2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handlePasswordChange,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, t[this.props.lang].change))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    }), React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: t[this.props.lang].email,\n      className: classes.cardheader,\n      avatar: React.createElement(Email, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, email), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: () => this.setState({\n        changeEmailDlg: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, t[this.props.lang].change_email), React.createElement(Dialog, {\n      open: changeEmailDlg,\n      onClose: this.handleEmailDlgClose,\n      \"aria-labelledby\": \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"form-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }, \"Change Email\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      autoFocus: true,\n      margin: \"dense\",\n      id: \"email\",\n      label: t[this.props.lang].new_email,\n      fullWidth: true,\n      value: newEmail,\n      onChange: this.handleTextInput(\"newEmail\"),\n      error: !newEmailValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleEmailChange,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }, t[this.props.lang].change))))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698\n      },\n      __self: this\n    }), React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: t[this.props.lang].payment,\n      className: classes.cardheader,\n      avatar: React.createElement(Payment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 703\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, t[this.props.lang].payment_desc)))))), React.createElement(BackLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    lang: state.menu.lang\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    dispatch\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UserPanel));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/dashboard/userpanel/index.js"],"names":["React","Component","withStyles","Grid","Link","Typography","Radio","RadioGroup","FormHelperText","FormControlLabel","FormControl","FormLabel","FormGroup","TextField","Select","InputLabel","MenuItem","countryList","KeyboardDatePicker","Button","Container","Card","CardHeader","CardMedia","CardContent","CardActions","Security","Email","Divider","typography","axios","config","Image","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","validator","NotificationManager","ProfileDefaultImg","BackLink","connect","t","Payment","BrowserView","MobileView","isBrowser","isMobile","styles","theme","content","flexGrow","padding","spacing","toolbar","mixins","formGroup","maxWidth","formControl","margin","group","textField","marginLeft","marginRight","card","minWidth","cardheader","backgroundColor","color","media","height","paddingTop","dialog","UserPanel","constructor","props","saveProfileInfo","state","gender","lastname","firstname","languageforCorrespondance","email","phonenumber","address","address2","postCode","townCity","country","profilePicture","request","url","baseURL","apiBaseUrl","method","data","then","res","console","log","success","lang","profile_saved_successfully","catch","err","error","failed_to_save_profile","getProfileInfo","setState","user_id","avatar","acceptCount","handleTextInput","input","e","target","value","newPassword","newPassword2","isValidPassword2","handleBirthOfDate","val","dateOfBirth","handleSelectedAvatar","event","files","length","uploadFile","FormData","append","onUploadProgress","progressEvent","percent","loaded","total","path","count","dispatch","type","payload","handleEmailDlgClose","changeEmailDlg","handleEmailChange","newEmail","isEmail","newEmailValid","failed","handlePasswordClose","resetPwdDlg","handlePasswordChange","passwordData","oldPassword","password_changed","password_change_is_failed","componentDidMount","selectCountry","nationality","render","classes","profil","civility","mr","mrs","ms","first_name","enter_your_first_name","last_name","language","english","french","enter_your_email","readOnly","phone_number","enter_your_phone_number","marginBottom","enter_your_addres","postcode","enter_your_postcode","town_city","enter_your_city","map","item","index","name","display","justifyContent","button","save_my_profile","flexDirection","profile_picture","width","position","alignItems","add_profile_picture","security","password","change_password","old_password","new_password","confirm_password","change","change_email","new_email","payment","payment_desc","mapStateToProps","menu","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { countryList } from \"../../../constants/country.json\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Security from \"@material-ui/icons/Security\";\r\nimport Email from \"@material-ui/icons/Email\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { typography } from \"@material-ui/system\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/config\";\r\nimport Image from \"material-ui-image\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport validator from \"validator\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport ProfileDefaultImg from \"../../../assets/profile_default.jpg\";\r\nimport BackLink from \"../../../components/backline\";\r\nimport { connect } from \"react-redux\";\r\nimport t from \"../../../constants/language\";\r\nimport Payment from \"@material-ui/icons/Payment\";\r\nimport {\r\n  BrowserView,\r\n  MobileView,\r\n  isBrowser,\r\n  isMobile\r\n} from \"react-device-detect\";\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  formGroup: {\r\n    maxWidth: 320,\r\n    padding: 16\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n    // width: 400,\r\n  },\r\n  card: {\r\n    maxWidth: 400,\r\n    minWidth: 240\r\n  },\r\n  cardheader: {\r\n    backgroundColor: \"#3f51b5\",\r\n    color: \"#fff\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  dialog: {\r\n    maxWidth: 500\r\n  }\r\n});\r\nclass UserPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      gender: \"male\",\r\n      lastname: \"\",\r\n      firstname: \"\",\r\n      languageforCorrespondance: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n\r\n      address: \"\",\r\n      address2: \"\",\r\n      postCode: \"\",\r\n      townCity: \"\",\r\n      country: \"\",\r\n\r\n      profilePicture: \"\",\r\n      count: 0,\r\n      resetPwdDlg: false,\r\n      oldPassword: \"\",\r\n      newPassword: \"\",\r\n      newPassword2: \"\",\r\n      isValidPassword2: true,\r\n\r\n      newEmail: \"\",\r\n      changeEmailDlg: false,\r\n      newEmailValid: true,\r\n\r\n      acceptCount: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProfileInfo();\r\n  }\r\n\r\n  saveProfileInfo = () => {\r\n    const {\r\n      gender,\r\n      lastname,\r\n      firstname,\r\n      languageforCorrespondance,\r\n      email,\r\n      phonenumber,\r\n\r\n      address,\r\n      address2,\r\n      postCode,\r\n      townCity,\r\n      country,\r\n      profilePicture\r\n    } = this.state;\r\n\r\n    axios\r\n      .request({\r\n        url: \"/api/dashboard/profile\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"PUT\",\r\n        data: {\r\n          lastname: lastname,\r\n          firstname: firstname,\r\n          email: email,\r\n\r\n          gender: gender,\r\n          languageforCorrespondance: languageforCorrespondance,\r\n          phonenumber: phonenumber,\r\n\r\n          address: address,\r\n          address2: address2,\r\n          postCode: postCode,\r\n          townCity: townCity,\r\n          country: country\r\n\r\n          // profilePicture: profilePicture\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"saveProfile\", res);\r\n        NotificationManager.success(\r\n          t[this.props.lang].profile_saved_successfully\r\n        );\r\n      })\r\n      .catch(err => {\r\n        console.log(\"saveProfile Error\", err);\r\n        NotificationManager.error(t[this.props.lang].failed_to_save_profile);\r\n      });\r\n  };\r\n\r\n  getProfileInfo = () => {\r\n    console.log(\"get profile started\");\r\n\r\n    axios\r\n      .request({\r\n        url: \"/api/dashboard/profile\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"GET\"\r\n      })\r\n      .then(res => {\r\n        console.log(\"get Profile\", res.data);\r\n        this.setState({\r\n          lastname: res.data.user_id.lastname,\r\n          firstname: res.data.user_id.firstname,\r\n          email: res.data.user_id.email,\r\n          phonenumber: res.data.user_id.phonenumber,\r\n\r\n          gender: res.data.gender,\r\n          languageforCorrespondance: res.data.languageforCorrespondance,\r\n\r\n          address: res.data.address,\r\n          address2: res.data.address2,\r\n          postCode: res.data.postCode,\r\n          townCity: res.data.townCity,\r\n          country: res.data.country,\r\n\r\n          profilePicture: res.data.avatar\r\n            ? config.apiBaseUrl + res.data.avatar\r\n            : \"\",\r\n          acceptCount: res.data.acceptCount\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"get profile error\", err);\r\n      });\r\n  };\r\n\r\n  handleTextInput = input => e => {\r\n    this.setState({ [input]: e.target.value }, function() {\r\n      if ([input] == \"newPassword2\") {\r\n        if (this.state.newPassword === this.state.newPassword2) {\r\n          this.setState({ isValidPassword2: true });\r\n        } else {\r\n          this.setState({ isValidPassword2: false });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleBirthOfDate = (data, val) => {\r\n    console.log(\"tag\", val);\r\n    this.setState({ dateOfBirth: val });\r\n  };\r\n\r\n  selectCountry(val) {\r\n    this.setState({ nationality: val });\r\n  }\r\n\r\n  handleSelectedAvatar = event => {\r\n    if (event.target.files.length === 0) {\r\n      return;\r\n    }\r\n    // this.setState({ selectedFile: event.target.files[0]});\r\n    // this.getPreviewData(event.target.files[0]);\r\n\r\n    let uploadFile = event.target.files[0];\r\n    const data = new FormData();\r\n    data.append(\"file\", uploadFile);\r\n    axios\r\n      .request({\r\n        url: \"/api/dashboard/avatar\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"post\",\r\n        data: data,\r\n        onUploadProgress: progressEvent => {\r\n          var percent = (progressEvent.loaded * 100) / progressEvent.total;\r\n          // this.setState({ upload_progress: percent });\r\n        }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          profilePicture: config.apiBaseUrl + res.data.path,\r\n          count: this.state.count + 1\r\n        });\r\n        this.props.dispatch({\r\n          type: \"AVATAR_CHANGED\",\r\n          payload: res.data.path + \"?\" + this.state.count\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"avatar err\", err);\r\n      });\r\n  };\r\n\r\n  handleEmailDlgClose = () => {\r\n    this.setState({ changeEmailDlg: !this.state.changeEmailDlg });\r\n  };\r\n\r\n  handleEmailChange = () => {\r\n    if (!this.state.newEmail) return;\r\n    if (!validator.isEmail(this.state.newEmail)) {\r\n      this.setState({ newEmailValid: false });\r\n      return;\r\n    }\r\n    axios\r\n      .request({\r\n        url: \"/api/dashboard/changeemail\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"POST\",\r\n        data: { email: this.state.newEmail }\r\n      })\r\n      .then(res => {\r\n        console.log(\"email changing\", res.data);\r\n        this.setState({ email: res.data.email, changeEmailDlg: false });\r\n        NotificationManager.success(t[this.props.lang].success);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"email changing err\", err);\r\n        NotificationManager.error(t[this.props.lang].failed);\r\n      });\r\n  };\r\n\r\n  handlePasswordClose = () => {\r\n    this.setState({ resetPwdDlg: !this.state.resetPwdDlg });\r\n  };\r\n\r\n  handlePasswordChange = () => {\r\n    if (this.state.newPassword2.length > 0 && this.state.isValidPassword2) {\r\n      const passwordData = {\r\n        oldPassword: this.state.oldPassword,\r\n        newPassword: this.state.newPassword\r\n      };\r\n      axios\r\n        .request({\r\n          url: \"/api/dashboard/passwordchange\",\r\n          baseURL: config.apiBaseUrl,\r\n          method: \"post\",\r\n          data: passwordData\r\n        })\r\n        .then(res => {\r\n          NotificationManager.success(t[this.props.lang].password_changed);\r\n          this.handlePasswordClose();\r\n        })\r\n        .catch(err => {\r\n          console.log(\"password changing err\", err);\r\n          NotificationManager.error(\r\n            t[this.props.lang].password_change_is_failed\r\n          );\r\n        });\r\n      // this.handlePasswordClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      gender,\r\n      lastname,\r\n      firstname,\r\n      languageforCorrespondance,\r\n      email,\r\n      phonenumber,\r\n\r\n      address,\r\n      address2,\r\n      postCode,\r\n      townCity,\r\n      country,\r\n      profilePicture,\r\n      resetPwdDlg,\r\n      oldPassword,\r\n      newPassword,\r\n      newPassword2,\r\n      isValidPassword2,\r\n      changeEmailDlg,\r\n      newEmail,\r\n      newEmailValid\r\n    } = this.state;\r\n    return (\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Grid container>\r\n          <Grid item xs={12} sm={12} md={6} lg={4}>\r\n            <FormGroup className={classes.formGroup}>\r\n              <h1>{t[this.props.lang].profil}</h1>\r\n              <FormControl required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"\">\r\n                  {t[this.props.lang].civility}\r\n                </InputLabel>\r\n                <Select\r\n                  value={gender}\r\n                  onChange={this.handleTextInput(\"gender\")}\r\n                >\r\n                  <MenuItem value=\"Mr\">{t[this.props.lang].mr}</MenuItem>\r\n                  <MenuItem value=\"Mrs\">{t[this.props.lang].mrs}</MenuItem>\r\n                  <MenuItem value=\"Ms\">{t[this.props.lang].ms}</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <TextField\r\n                required\r\n                id=\"firstname\"\r\n                label={t[this.props.lang].first_name}\r\n                placeholder={t[this.props.lang].enter_your_first_name}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={firstname}\r\n                onChange={this.handleTextInput(\"firstname\")}\r\n              />\r\n\r\n              <TextField\r\n                required\r\n                id=\"lastname\"\r\n                label={t[this.props.lang].last_name}\r\n                placeholder={t[this.props.lang].last_name}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={lastname}\r\n                onChange={this.handleTextInput(\"lastname\")}\r\n              />\r\n\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"languageforcorrespond\">\r\n                  {t[this.props.lang].language}\r\n                </InputLabel>\r\n                <Select\r\n                  value={languageforCorrespondance}\r\n                  onChange={this.handleTextInput(\"languageforCorrespondance\")}\r\n                >\r\n                  <MenuItem value=\"english\">\r\n                    {t[this.props.lang].english}\r\n                  </MenuItem>\r\n                  <MenuItem value=\"french\">\r\n                    {t[this.props.lang].french}\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <TextField\r\n                required\r\n                id=\"email\"\r\n                label={t[this.props.lang].email}\r\n                placeholder={t[this.props.lang].enter_your_email}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                InputProps={{\r\n                  readOnly: true\r\n                }}\r\n                value={email}\r\n                onChange={this.handleTextInput(\"email\")}\r\n              />\r\n\r\n              <TextField\r\n                required\r\n                id=\"phonenumber\"\r\n                label={t[this.props.lang].phone_number}\r\n                placeholder={t[this.props.lang].enter_your_phone_number}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={phonenumber}\r\n                onChange={this.handleTextInput(\"phonenumber\")}\r\n              />\r\n\r\n              <br />\r\n              <h1 style={{ marginBottom: 0 }}>{t[this.props.lang].address}</h1>\r\n              <TextField\r\n                id=\"address\"\r\n                label={t[this.props.lang].address}\r\n                placeholder={t[this.props.lang].enter_your_addres}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={address}\r\n                onChange={this.handleTextInput(\"address\")}\r\n              />\r\n\r\n              <TextField\r\n                id=\"address2\"\r\n                label={t[this.props.lang].address2}\r\n                placeholder={t[this.props.lang].enter_your_addres}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={address2}\r\n                onChange={this.handleTextInput(\"address2\")}\r\n              />\r\n\r\n              <TextField\r\n                id=\"postcode\"\r\n                label={t[this.props.lang].postcode}\r\n                placeholder={t[this.props.lang].enter_your_postcode}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={postCode}\r\n                onChange={this.handleTextInput(\"postCode\")}\r\n              />\r\n\r\n              <TextField\r\n                id=\"towncity\"\r\n                label={t[this.props.lang].town_city}\r\n                placeholder={t[this.props.lang].enter_your_city}\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                value={townCity}\r\n                onChange={this.handleTextInput(\"townCity\")}\r\n              />\r\n\r\n              <FormControl className={classes.formControl}>\r\n                <InputLabel htmlFor=\"\">{t[this.props.lang].country}</InputLabel>\r\n                <Select\r\n                  value={country}\r\n                  onChange={this.handleTextInput(\"country\")}\r\n                >\r\n                  {countryList.map((item, index) => {\r\n                    return (\r\n                      <MenuItem key={index} value={item.name[0]}>\r\n                        {item.name[this.props.lang]}\r\n                      </MenuItem>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </FormControl>\r\n              <br />\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.button}\r\n                  style={{ marginLeft: 16 }}\r\n                  onClick={this.saveProfileInfo}\r\n                >\r\n                  {t[this.props.lang].save_my_profile}\r\n                </Button>\r\n              </div>\r\n            </FormGroup>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={6} lg={4}>\r\n            <br />\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"center\",\r\n                margin: 16\r\n              }}\r\n            >\r\n              <Card className={classes.card}>\r\n                <CardHeader\r\n                  title={t[this.props.lang].profile_picture}\r\n                  className={classes.cardheader}\r\n                />\r\n                <CardContent\r\n                  style={{\r\n                    margin: 20,\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\"\r\n                  }}\r\n                >\r\n                  <Image\r\n                    alt=\"avatar img\"\r\n                    src={\r\n                      this.state.profilePicture\r\n                        ? this.state.profilePicture + \"?\" + this.state.count\r\n                        : ProfileDefaultImg\r\n                    }\r\n                    imageStyle={{\r\n                      width: 180,\r\n                      height: \"auto\",\r\n                      position: \"relative\"\r\n                      // maxWidth: 200,\r\n                      // maxHeight: 300\r\n                    }}\r\n                    style={{ paddingTop: 0 }}\r\n                  />\r\n                </CardContent>\r\n                <CardActions\r\n                  disableSpacing\r\n                  style={{\r\n                    flexDirection: \"column\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\"\r\n                  }}\r\n                >\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    component=\"label\"\r\n                    className={classes.button}\r\n                    style={{ marginBottom: 20 }}\r\n                  >\r\n                    <input\r\n                      accept=\"Image/*\"\r\n                      style={{ display: \"none\" }}\r\n                      type=\"file\"\r\n                      onChange={this.handleSelectedAvatar}\r\n                    />\r\n                    {t[this.props.lang].add_profile_picture}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n              <br />\r\n              <Card className={classes.card}>\r\n                <CardHeader\r\n                  title={t[this.props.lang].security}\r\n                  className={classes.cardheader}\r\n                  avatar={<Security />}\r\n                />\r\n                <CardContent>\r\n                  <h4>{t[this.props.lang].password}</h4>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => this.setState({ resetPwdDlg: true })}\r\n                  >\r\n                    {t[this.props.lang].change_password}\r\n                  </Button>\r\n                  <Dialog\r\n                    open={resetPwdDlg}\r\n                    onClose={this.handlePasswordClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                      {t[this.props.lang].change_password}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      {/* <DialogContentText>\r\n                      To subscribe to this website, please enter your email\r\n                      address here. We will send updates occasionally.\r\n                    </DialogContentText> */}\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label={t[this.props.lang].old_password}\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        value={oldPassword}\r\n                        onChange={this.handleTextInput(\"oldPassword\")}\r\n                      />\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label={t[this.props.lang].new_password}\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        value={newPassword}\r\n                        onChange={this.handleTextInput(\"newPassword\")}\r\n                      />\r\n                      <TextField\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label={t[this.props.lang].confirm_password}\r\n                        type=\"password\"\r\n                        fullWidth\r\n                        error={!isValidPassword2}\r\n                        value={newPassword2}\r\n                        onChange={this.handleTextInput(\"newPassword2\")}\r\n                      />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button\r\n                        onClick={this.handlePasswordChange}\r\n                        color=\"primary\"\r\n                      >\r\n                        {t[this.props.lang].change}\r\n                      </Button>\r\n                      {/* <Button onClick={this.handlePasswordClose} color=\"primary\">\r\n                      Cancel\r\n                    </Button> */}\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </CardContent>\r\n              </Card>\r\n              <br />\r\n              <Card className={classes.card}>\r\n                <CardHeader\r\n                  title={t[this.props.lang].email}\r\n                  className={classes.cardheader}\r\n                  avatar={<Email />}\r\n                />\r\n                <CardContent>\r\n                  <p>{email}</p>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.button}\r\n                    onClick={() => this.setState({ changeEmailDlg: true })}\r\n                  >\r\n                    {t[this.props.lang].change_email}\r\n                  </Button>\r\n                  <Dialog\r\n                    open={changeEmailDlg}\r\n                    onClose={this.handleEmailDlgClose}\r\n                    aria-labelledby=\"form-dialog-title\"\r\n                  >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                      Change Email\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"email\"\r\n                        label={t[this.props.lang].new_email}\r\n                        fullWidth\r\n                        value={newEmail}\r\n                        onChange={this.handleTextInput(\"newEmail\")}\r\n                        error={!newEmailValid}\r\n                      />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={this.handleEmailChange} color=\"primary\">\r\n                        {t[this.props.lang].change}\r\n                      </Button>\r\n                      {/* <Button onClick={this.handlePasswordClose} color=\"primary\">\r\n                      Cancel\r\n                    </Button> */}\r\n                    </DialogActions>\r\n                  </Dialog>\r\n                </CardContent>\r\n                {/* <Divider /> */}\r\n              </Card>\r\n              <br />\r\n              <Card className={classes.card}>\r\n                <CardHeader\r\n                  title={t[this.props.lang].payment}\r\n                  className={classes.cardheader}\r\n                  avatar={<Payment />}\r\n                />\r\n                <CardContent>\r\n                  <p>{t[this.props.lang].payment_desc}</p>\r\n                </CardContent>\r\n              </Card>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <BackLink />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lang: state.menu.lang\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatch\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(UserPanel));\r\n"]},"metadata":{},"sourceType":"module"}