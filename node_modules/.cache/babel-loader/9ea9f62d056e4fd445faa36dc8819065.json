{"ast":null,"code":"import _objectSpread from \"F:\\\\React\\\\upwork\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\Auth\\\\register\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport { registerUser } from \"../../../actions/authActions\";\nimport validator from \"validator\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport t from \"../../../constants/language\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { bindActionCreators } from \"redux\";\nimport * as types from \"../../../actions/types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport config from \"../../../config/config\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst styles = theme => ({\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) // width: 400,\n\n  },\n  container: {// flexGrow: 1,\n    //  maxWidth: 600,\n  },\n  checkbox: {\n    marginLeft: -2,\n    marginTop: 4\n  }\n});\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.validation = () => {\n      const _this$state = this.state,\n            firstname = _this$state.firstname,\n            lastname = _this$state.lastname,\n            phonenumber = _this$state.phonenumber,\n            email = _this$state.email,\n            password = _this$state.password,\n            password2 = _this$state.password2;\n      const errors = {};\n      let isError = false;\n\n      if (firstname.length < 3) {\n        isError = true;\n        errors.firstname = \"Firstname must be more than 3 letters\";\n      }\n\n      if (lastname.length < 3) {\n        isError = true;\n        errors.lastname = \"Lastname must be more than 3 letters\";\n      }\n\n      if (!validator.isEmail(email)) {\n        isError = true;\n        errors.email = \"Invalid email\";\n      } // if (!validator.isMobilePhone(phonenumber)) {\n      //   isError = true;\n      //   errors.phonenumber = \"Invalid phonenumber\";\n      // }\n\n\n      if (password.length < 6) {\n        isError = true;\n        errors.password = \"password must be more than 6 letters\";\n      }\n\n      if (!validator.equals(password, password2) || password2.length < 1) {\n        isError = true;\n        errors.password2 = \"password is not matched\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return !isError;\n    };\n\n    this.handleTextInput = input => e => {\n      this.setState({\n        [input]: e.target.value\n      }, function () {\n        if (this.state.clicked) this.validation();\n      });\n    };\n\n    this.handleAgreeTerm = () => {\n      this.setState({\n        checkedAgree: !this.state.checkedAgree\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        clicked: true\n      });\n\n      if (!this.validation()) {\n        return;\n      }\n\n      const newUser = {\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n        email: this.state.email,\n        phonenumber: this.state.phonenumber,\n        password: this.state.password,\n        password2: this.state.password2\n      };\n      this.registerUser(newUser, this.props.history);\n    };\n\n    this.registerUser = (userData, history) => {\n      this.props.dispatch({\n        type: types.USER_LOADING,\n        payload: true\n      });\n      axios.request({\n        url: \"/api/users/register\",\n        baseURL: config.apiBaseUrl,\n        method: \"post\",\n        data: userData\n      }).then(response => {\n        const token = response.data.token;\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthToken(token);\n        const decoded = jwt_decode(token);\n        this.props.dispatch({\n          type: types.SET_CURRENT_USER,\n          payload: decoded\n        });\n        history.push(\"/dashboard\");\n      }).catch(err => {\n        console.log(\"err\", err);\n\n        try {\n          if (err.response.data.title === \"Email\") {\n            NotificationManager.error(\"Email already exist\"); // multi - language\n          }\n        } catch (err) {\n          NotificationManager.error(\"Server error\");\n        }\n\n        this.props.dispatch({\n          type: types.USER_LOADING,\n          payload: false\n        });\n      });\n    };\n\n    this.state = {\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      phonenumber: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {\n        firstname: \"\",\n        lastname: \"\",\n        email: \"\",\n        phonenumber: \"\",\n        password: \"\",\n        password2: \"\"\n      },\n      clicked: false,\n      checkedAgree: false\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          errors = _this$state2.errors,\n          firstname = _this$state2.firstname,\n          lastname = _this$state2.lastname,\n          phonenumber = _this$state2.phonenumber,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          password2 = _this$state2.password2;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"firstname\",\n      label: t[this.props.lang].first_name,\n      placeholder: t[this.props.lang].enter_your_first_name,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.firstname ? true : false,\n      value: firstname,\n      onChange: this.handleTextInput(\"firstname\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"lastname\",\n      label: t[this.props.lang].last_name,\n      placeholder: t[this.props.lang].enter_your_last_name,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.lastname ? true : false,\n      value: lastname,\n      onChange: this.handleTextInput(\"lastname\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"email\",\n      label: t[this.props.lang].email,\n      type: \"email\",\n      placeholder: t[this.props.lang].enter_your_email,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.email ? true : false,\n      value: email,\n      onChange: this.handleTextInput(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"password\",\n      label: t[this.props.lang].password,\n      type: \"password\",\n      placeholder: t[this.props.lang].enter_your_password,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.password ? true : false,\n      value: password,\n      onChange: this.handleTextInput(\"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"password2\",\n      label: t[this.props.lang].confirm_password,\n      type: \"password\",\n      placeholder: t[this.props.lang].confirm_password,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.password2 ? true : false,\n      value: password2,\n      onChange: this.handleTextInput(\"password2\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"phone\",\n      label: t[this.props.lang].phone_number // type=\"number\"\n      ,\n      placeholder: t[this.props.lang].enter_your_phone_number,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.phonenumber ? true : false,\n      value: phonenumber,\n      onChange: this.handleTextInput(\"phonenumber\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      className: classes.checkbox,\n      control: React.createElement(Checkbox, {\n        checked: this.state.checkedAgree,\n        onChange: this.handleAgreeTerm,\n        value: \"AgreeTerm\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }),\n      required: true,\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, t[this.props.lang].i_accept, \" \"), React.createElement(\"a\", {\n        href: \"/#/terms\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, t[this.props.lang].terms)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: this.props.loading || !this.state.checkedAgree,\n      color: \"primary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, t[this.props.lang].register)));\n  }\n\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n  lang: state.menu.lang\n});\n\nfunction mapDispatchToProps(dispatch) {\n  return _objectSpread({\n    dispatch\n  }, bindActionCreators({\n    registerUser\n  }, dispatch));\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(withRouter(Register)));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/Auth/register/index.js"],"names":["React","Component","withRouter","FormGroup","TextField","withStyles","Button","registerUser","validator","connect","PropTypes","FormControlLabel","Checkbox","t","FormControl","bindActionCreators","types","axios","setAuthToken","jwt_decode","config","NotificationManager","styles","theme","textField","marginLeft","spacing","marginRight","container","checkbox","marginTop","Register","constructor","validation","state","firstname","lastname","phonenumber","email","password","password2","errors","isError","length","isEmail","equals","setState","handleTextInput","input","e","target","value","clicked","handleAgreeTerm","checkedAgree","onSubmit","newUser","props","history","userData","dispatch","type","USER_LOADING","payload","request","url","baseURL","apiBaseUrl","method","data","then","response","token","localStorage","setItem","decoded","SET_CURRENT_USER","push","catch","err","console","log","title","error","render","classes","lang","first_name","enter_your_first_name","last_name","enter_your_last_name","enter_your_email","enter_your_password","confirm_password","phone_number","enter_your_phone_number","i_accept","terms","display","flexDirection","justifyContent","paddingTop","loading","register","propTypes","func","isRequired","bool","mapStateToProps","isAuthenticated","auth","menu","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { registerUser } from \"../../../actions/authActions\";\r\nimport validator from \"validator\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport t from \"../../../constants/language\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as types from \"../../../actions/types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../../../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport config from \"../../../config/config\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nconst styles = theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n    // width: 400,\r\n  },\r\n  container: {\r\n    // flexGrow: 1,\r\n    //  maxWidth: 600,\r\n  },\r\n  checkbox: {\r\n    marginLeft: -2,\r\n    marginTop: 4\r\n  }\r\n});\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      email: \"\",\r\n      phonenumber: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n        phonenumber: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n      },\r\n      clicked: false,\r\n      checkedAgree: false\r\n    };\r\n  }\r\n\r\n  validation = () => {\r\n    const {\r\n      firstname,\r\n      lastname,\r\n      phonenumber,\r\n      email,\r\n      password,\r\n      password2\r\n    } = this.state;\r\n\r\n    const errors = {};\r\n    let isError = false;\r\n    if (firstname.length < 3) {\r\n      isError = true;\r\n      errors.firstname = \"Firstname must be more than 3 letters\";\r\n    }\r\n    if (lastname.length < 3) {\r\n      isError = true;\r\n      errors.lastname = \"Lastname must be more than 3 letters\";\r\n    }\r\n    if (!validator.isEmail(email)) {\r\n      isError = true;\r\n      errors.email = \"Invalid email\";\r\n    }\r\n    // if (!validator.isMobilePhone(phonenumber)) {\r\n    //   isError = true;\r\n    //   errors.phonenumber = \"Invalid phonenumber\";\r\n    // }\r\n    if (password.length < 6) {\r\n      isError = true;\r\n      errors.password = \"password must be more than 6 letters\";\r\n    }\r\n    if (!validator.equals(password, password2) || password2.length < 1) {\r\n      isError = true;\r\n      errors.password2 = \"password is not matched\";\r\n    }\r\n    this.setState({ errors: errors });\r\n    return !isError;\r\n  };\r\n\r\n  handleTextInput = input => e => {\r\n    this.setState({ [input]: e.target.value }, function() {\r\n      if (this.state.clicked) this.validation();\r\n    });\r\n  };\r\n\r\n  handleAgreeTerm = () => {\r\n    this.setState({ checkedAgree: !this.state.checkedAgree });\r\n  };\r\n  onSubmit = () => {\r\n    this.setState({ clicked: true });\r\n    if (!this.validation()) {\r\n      return;\r\n    }\r\n    const newUser = {\r\n      firstname: this.state.firstname,\r\n      lastname: this.state.lastname,\r\n      email: this.state.email,\r\n      phonenumber: this.state.phonenumber,\r\n      password: this.state.password,\r\n      password2: this.state.password2\r\n    };\r\n    this.registerUser(newUser, this.props.history);\r\n  };\r\n\r\n  registerUser = (userData, history) => {\r\n    this.props.dispatch({ type: types.USER_LOADING, payload: true });\r\n    axios\r\n      .request({\r\n        url: \"/api/users/register\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"post\",\r\n        data: userData\r\n      })\r\n      .then(response => {\r\n        const { token } = response.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setAuthToken(token);\r\n        const decoded = jwt_decode(token);\r\n        this.props.dispatch({\r\n          type: types.SET_CURRENT_USER,\r\n          payload: decoded\r\n        });\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"err\", err);\r\n        try {\r\n          if (err.response.data.title === \"Email\") {\r\n            NotificationManager.error(\"Email already exist\"); // multi - language\r\n          }\r\n        } catch (err) {\r\n          NotificationManager.error(\"Server error\");\r\n        }\r\n        this.props.dispatch({ type: types.USER_LOADING, payload: false });\r\n      });\r\n  };\r\n  render() {\r\n    const {\r\n      errors,\r\n      firstname,\r\n      lastname,\r\n      phonenumber,\r\n      email,\r\n      password,\r\n      password2\r\n    } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container}>\r\n        <FormGroup>\r\n          <TextField\r\n            required\r\n            id=\"firstname\"\r\n            label={t[this.props.lang].first_name}\r\n            placeholder={t[this.props.lang].enter_your_first_name}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.firstname ? true : false}\r\n            value={firstname}\r\n            onChange={this.handleTextInput(\"firstname\")}\r\n          />\r\n          {/* <FormHelperText id=\"firstname\" error>requried</FormHelperText> */}\r\n\r\n          <TextField\r\n            required\r\n            id=\"lastname\"\r\n            label={t[this.props.lang].last_name}\r\n            placeholder={t[this.props.lang].enter_your_last_name}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.lastname ? true : false}\r\n            value={lastname}\r\n            onChange={this.handleTextInput(\"lastname\")}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"email\"\r\n            label={t[this.props.lang].email}\r\n            type=\"email\"\r\n            placeholder={t[this.props.lang].enter_your_email}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.email ? true : false}\r\n            value={email}\r\n            onChange={this.handleTextInput(\"email\")}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"password\"\r\n            label={t[this.props.lang].password}\r\n            type=\"password\"\r\n            placeholder={t[this.props.lang].enter_your_password}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.password ? true : false}\r\n            value={password}\r\n            onChange={this.handleTextInput(\"password\")}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"password2\"\r\n            label={t[this.props.lang].confirm_password}\r\n            type=\"password\"\r\n            placeholder={t[this.props.lang].confirm_password}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.password2 ? true : false}\r\n            value={password2}\r\n            onChange={this.handleTextInput(\"password2\")}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"phone\"\r\n            label={t[this.props.lang].phone_number}\r\n            // type=\"number\"\r\n            placeholder={t[this.props.lang].enter_your_phone_number}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.phonenumber ? true : false}\r\n            value={phonenumber}\r\n            onChange={this.handleTextInput(\"phonenumber\")}\r\n          />\r\n\r\n          <FormControl>\r\n            <FormControlLabel\r\n              className={classes.checkbox}\r\n              control={\r\n                <Checkbox\r\n                  checked={this.state.checkedAgree}\r\n                  onChange={this.handleAgreeTerm}\r\n                  value=\"AgreeTerm\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              required\r\n              label={\r\n                <span>\r\n                  <span>{t[this.props.lang].i_accept} </span>\r\n                  <a href=\"/#/terms\" target=\"_blank\">\r\n                    {t[this.props.lang].terms}\r\n                  </a>\r\n                </span>\r\n              }\r\n            />\r\n          </FormControl>\r\n        </FormGroup>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            paddingTop: 10\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={this.props.loading || !this.state.checkedAgree}\r\n            color=\"primary\"\r\n            onClick={this.onSubmit}\r\n          >\r\n            {t[this.props.lang].register}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n  lang: state.menu.lang\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    dispatch,\r\n    ...bindActionCreators({ registerUser }, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withStyles(styles)(withRouter(Register)));\r\n"]},"metadata":{},"sourceType":"module"}