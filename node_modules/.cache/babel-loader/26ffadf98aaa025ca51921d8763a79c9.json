{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\Admin\\\\UserTable\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { IconButton, TableSortLabel, Divider } from \"@material-ui/core\";\nimport { Add, Edit, Delete, Save, Cancel } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport config from \"../../../config/config\";\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport { Grid } from \"@material-ui/core\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { NotificationManager } from \"react-notifications\";\nimport { connect } from \"react-redux\";\nimport t from \"../../../constants/language\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    overflowX: \"auto\"\n  },\n  toolbar: theme.mixins.toolbar,\n  paper: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 650\n  },\n  submitButton: {\n    marginTop: 10,\n    backgroundColor: \"#30a5ff\",\n    width: 60\n  },\n  moreSummary: {\n    \"& div\": {\n      flexGrow: 0\n    }\n  },\n  username: {\n    color: \"#2065bf\",\n    cursor: \"pointer\"\n  },\n  offer: {\n    backgroundColor: \"#f3e5f5\"\n  },\n  demand: {\n    backgroundColor: \"#e3f2fd\"\n  },\n  exchange: {\n    backgroundColor: \"#e0f2f1\"\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  }\n});\n\nconst headRows = [{\n  id: \"No\",\n  numeric: true,\n  disablePadding: false,\n  label: [\"No\", \"Num\"]\n}, {\n  id: \"firstName\",\n  numeric: false,\n  disablePadding: false,\n  label: [\"First Name\", \"Prénom\"]\n}, {\n  id: \"lastName\",\n  numeric: true,\n  disablePadding: false,\n  label: [\"Last Name\", \"Nom de famille\"]\n}, {\n  id: \"email\",\n  numeric: false,\n  disablePadding: false,\n  label: [\"Email\", \"Email\"]\n}, {\n  id: \"phoneNumber\",\n  numeric: false,\n  disablePadding: false,\n  label: [\"PhoneNumber\", \"Numéro de téléphone\"]\n}, {\n  id: \"acceptCount\",\n  numeric: false,\n  disablePadding: false,\n  label: [\"AcceptCount\", \"acceptCount-fr\"]\n}];\n\nclass UserTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getUsers = () => {\n      this.setState({\n        isLoading: true\n      });\n      axios.request({\n        url: \"/api/admin/userlist\",\n        baseURL: config.apiBaseUrl,\n        method: \"GET\"\n      }).then(res => {\n        console.log(\"GET userlist\", res.data);\n        this.setState({\n          tableData: res.data.users,\n          isLoading: false\n        });\n      }).catch(err => {\n        console.log(\"GET userlist Error: \", err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        currentPage: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: event.target.value,\n        currentPage: 0\n      });\n    };\n\n    this.onClickDelete = item => {\n      console.log(\"213\");\n      axios.request({\n        url: \"/api/admin/user\",\n        baseURL: config.apiBaseUrl,\n        method: \"DELETE\",\n        data: {\n          user_id: item._id\n        }\n      }).then(res => {\n        console.log(\"DELETE user\", res.data);\n        const array = this.state.tableData.filter(element => {\n          if (element == item) return false;\n          return true;\n        });\n        this.setState({\n          tableData: array\n        });\n        NotificationManager.success(\"success\");\n      }).catch(err => {\n        console.log(\"DELETE user Error: \", err); // alert(\"Delete request to Server failed\");\n\n        NotificationManager.error(\"Failed\");\n      });\n    };\n\n    this.handleSort = rowId => {\n      console.log(\"handleSort\", rowId);\n      const isDesc = this.state.orderBy === rowId && this.state.order === \"desc\";\n      this.setState({\n        order: isDesc ? \"asc\" : \"desc\",\n        orderBy: rowId\n      });\n    };\n\n    this.getSorting = (order, orderBy) => {\n      return order === \"desc\" ? (a, b) => this.desc(a, b, orderBy) : (a, b) => -this.desc(a, b, orderBy);\n    };\n\n    this.stableSort = (array, cmp) => {\n      const stabilizedThis = array.map((el, index) => [el, index]);\n      stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n      });\n      return stabilizedThis.map(el => el[0]);\n    };\n\n    this.state = {\n      tableData: new Array(),\n      isLoading: true,\n      currentPage: 0,\n      rowsPerPage: 5,\n      order: \"asc\",\n      orderBy: \"No\"\n    };\n  }\n\n  componentWillMount() {// const jwtToken = localStorage.getItem(\"jwtToken\");\n    // console.log(\"jwt\", jwtToken);\n    // if (!isAuthenticated()) {\n    //   this.props.history.push(\"/\");\n    // }\n    // setAuthToken(jwtToken);\n  }\n\n  componentDidMount() {\n    this.getUsers();\n  }\n\n  desc(a, b, orderBy) {\n    var left = a[orderBy];\n    var right = b[orderBy];\n\n    if (orderBy === \"width\" || orderBy === \"draught\") {\n      left = parseInt(left);\n      right = parseInt(right);\n    } else {\n      if (typeof left === \"string\") left = left.toLowerCase();\n      if (typeof right === \"string\") right = right.toLowerCase();\n    }\n\n    if (right < left) {\n      return -1;\n    }\n\n    if (right > left) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          rowsPerPage = _this$state.rowsPerPage,\n          tableData = _this$state.tableData,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, t[this.props.lang].user_list), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(Table, {\n      className: classes.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(TableHead, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(TableRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), headRows.map((row, index) => React.createElement(TableCell, {\n      key: row.id,\n      align: \"left\",\n      padding: row.disablePadding ? \"none\" : \"default\",\n      sortDirection: orderBy === row.id ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, index === 0 ? row.label[this.props.lang] : React.createElement(TableSortLabel, {\n      active: orderBy === row.id,\n      direction: order,\n      onClick: () => this.handleSort(row.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, row.label[this.props.lang]))))), React.createElement(TableBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, this.state.isLoading && React.createElement(\"p\", {\n      style: {\n        marginLeft: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"loading...\"), tableData && this.stableSort(tableData, this.getSorting(order, orderBy)).slice(currentPage * rowsPerPage, currentPage * rowsPerPage + rowsPerPage).map((item, index) => React.createElement(TableRow, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      align: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: () => this.onClickDelete(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(Delete, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }))), React.createElement(TableCell, {\n      component: \"th\",\n      scope: \"row\",\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, currentPage * rowsPerPage + index + 1), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, item.firstname), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, item.lastname), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, item.email), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, item.phonenumber), React.createElement(TableCell, {\n      align: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, item.profile[0].acceptCount))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: this.state.tableData.length,\n      rowsPerPage: this.state.rowsPerPage,\n      page: this.state.currentPage,\n      backIconButtonProps: {\n        \"aria-label\": \"Previous Page\"\n      },\n      nextIconButtonProps: {\n        \"aria-label\": \"Next Page\"\n      },\n      onChangePage: this.handleChangePage,\n      onChangeRowsPerPage: this.handleChangeRowsPerPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    mobileOpen: state.mobileOpen,\n    lang: state.menu.lang\n  };\n};\n\nexport default connect(mapStateToProps)(withStyles(styles)(UserTable));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/Admin/UserTable/index.js"],"names":["React","Component","withStyles","Table","TableBody","TableCell","TableHead","TableRow","TablePagination","Paper","IconButton","TableSortLabel","Divider","Add","Edit","Delete","Save","Cancel","axios","config","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","ExpandMoreIcon","Grid","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","NotificationManager","connect","t","Radio","RadioGroup","FormControlLabel","FormControl","FormGroup","Checkbox","styles","theme","content","flexGrow","padding","spacing","overflowX","toolbar","mixins","paper","width","table","minWidth","submitButton","marginTop","backgroundColor","moreSummary","username","color","cursor","offer","demand","exchange","formControl","margin","headRows","id","numeric","disablePadding","label","UserTable","constructor","props","getUsers","setState","isLoading","request","url","baseURL","apiBaseUrl","method","then","res","console","log","data","tableData","users","catch","err","handleChangePage","event","newPage","currentPage","handleChangeRowsPerPage","rowsPerPage","target","value","onClickDelete","item","user_id","_id","array","state","filter","element","success","error","handleSort","rowId","isDesc","orderBy","order","getSorting","a","b","desc","stableSort","cmp","stabilizedThis","map","el","index","sort","Array","componentWillMount","componentDidMount","left","right","parseInt","toLowerCase","render","classes","lang","user_list","row","marginLeft","slice","firstname","lastname","email","phonenumber","profile","acceptCount","length","mapStateToProps","mobileOpen","menu"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { IconButton, TableSortLabel, Divider } from \"@material-ui/core\";\r\nimport { Add, Edit, Delete, Save, Cancel } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/config\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport t from \"../../../constants/language\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    overflowX: \"auto\"\r\n  },\r\n\r\n  toolbar: theme.mixins.toolbar,\r\n  paper: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n\r\n  submitButton: {\r\n    marginTop: 10,\r\n    backgroundColor: \"#30a5ff\",\r\n    width: 60\r\n  },\r\n\r\n  moreSummary: {\r\n    \"& div\": {\r\n      flexGrow: 0\r\n    }\r\n  },\r\n  username: {\r\n    color: \"#2065bf\",\r\n    cursor: \"pointer\"\r\n  },\r\n  offer: {\r\n    backgroundColor: \"#f3e5f5\"\r\n  },\r\n  demand: {\r\n    backgroundColor: \"#e3f2fd\"\r\n  },\r\n  exchange: {\r\n    backgroundColor: \"#e0f2f1\"\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1)\r\n  }\r\n});\r\n\r\nconst headRows = [\r\n  {\r\n    id: \"No\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: [\"No\", \"Num\"]\r\n  },\r\n  {\r\n    id: \"firstName\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: [\"First Name\", \"Prénom\"]\r\n  },\r\n  {\r\n    id: \"lastName\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: [\"Last Name\", \"Nom de famille\"]\r\n  },\r\n  {\r\n    id: \"email\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: [\"Email\", \"Email\"]\r\n  },\r\n  {\r\n    id: \"phoneNumber\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: [\"PhoneNumber\", \"Numéro de téléphone\"]\r\n  },\r\n  {\r\n    id: \"acceptCount\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: [\"AcceptCount\", \"acceptCount-fr\"]\r\n  }\r\n];\r\n\r\nclass UserTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tableData: new Array(),\r\n\r\n      isLoading: true,\r\n      currentPage: 0,\r\n      rowsPerPage: 5,\r\n\r\n      order: \"asc\",\r\n      orderBy: \"No\"\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    // const jwtToken = localStorage.getItem(\"jwtToken\");\r\n    // console.log(\"jwt\", jwtToken);\r\n    // if (!isAuthenticated()) {\r\n    //   this.props.history.push(\"/\");\r\n    // }\r\n    // setAuthToken(jwtToken);\r\n  }\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers = () => {\r\n    this.setState({ isLoading: true });\r\n    axios\r\n      .request({\r\n        url: \"/api/admin/userlist\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"GET\"\r\n      })\r\n      .then(res => {\r\n        console.log(\"GET userlist\", res.data);\r\n        this.setState({ tableData: res.data.users, isLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"GET userlist Error: \", err);\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({ currentPage: newPage });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({\r\n      rowsPerPage: event.target.value,\r\n      currentPage: 0\r\n    });\r\n  };\r\n\r\n  onClickDelete = item => {\r\n      console.log(\"213\")\r\n    axios\r\n      .request({\r\n        url: \"/api/admin/user\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"DELETE\",\r\n        data: { user_id: item._id }\r\n      })\r\n      .then(res => {\r\n        console.log(\"DELETE user\", res.data);\r\n        const array = this.state.tableData.filter(element => {\r\n          if (element == item) return false;\r\n          return true;\r\n        });\r\n        this.setState({ tableData: array });\r\n        NotificationManager.success(\"success\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"DELETE user Error: \", err);\r\n        // alert(\"Delete request to Server failed\");\r\n        NotificationManager.error(\"Failed\");\r\n      });\r\n  };\r\n\r\n  handleSort = rowId => {\r\n    console.log(\"handleSort\", rowId);\r\n    const isDesc = this.state.orderBy === rowId && this.state.order === \"desc\";\r\n    this.setState({ order: isDesc ? \"asc\" : \"desc\", orderBy: rowId });\r\n  };\r\n\r\n  desc(a, b, orderBy) {\r\n    var left = a[orderBy];\r\n    var right = b[orderBy];\r\n    if (orderBy === \"width\" || orderBy === \"draught\") {\r\n      left = parseInt(left);\r\n      right = parseInt(right);\r\n    } else {\r\n      if (typeof left === \"string\") left = left.toLowerCase();\r\n      if (typeof right === \"string\") right = right.toLowerCase();\r\n    }\r\n\r\n    if (right < left) {\r\n      return -1;\r\n    }\r\n    if (right > left) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getSorting = (order, orderBy) => {\r\n    return order === \"desc\"\r\n      ? (a, b) => this.desc(a, b, orderBy)\r\n      : (a, b) => -this.desc(a, b, orderBy);\r\n  };\r\n\r\n  stableSort = (array, cmp) => {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n      const order = cmp(a[0], b[0]);\r\n      if (order !== 0) return order;\r\n      return a[1] - b[1];\r\n    });\r\n\r\n    return stabilizedThis.map(el => el[0]);\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      currentPage,\r\n      rowsPerPage,\r\n      tableData,\r\n\r\n      order,\r\n      orderBy\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <main>\r\n          <h2>{t[this.props.lang].user_list}</h2>\r\n          <Paper className={classes.paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">\r\n                    {/* <IconButton onClick={this.onClickNew}>\r\n                    <Add />\r\n                  </IconButton> */}\r\n                  </TableCell>\r\n                  {headRows.map((row, index) => (\r\n                    <TableCell\r\n                      key={row.id}\r\n                      align={\"left\"}\r\n                      padding={row.disablePadding ? \"none\" : \"default\"}\r\n                      sortDirection={orderBy === row.id ? order : false}\r\n                    >\r\n                      {index === 0 ? (\r\n                        row.label[this.props.lang]\r\n                      ) : (\r\n                        <TableSortLabel\r\n                          active={orderBy === row.id}\r\n                          direction={order}\r\n                          onClick={() => this.handleSort(row.id)}\r\n                        >\r\n                          {row.label[this.props.lang]}\r\n                        </TableSortLabel>\r\n                      )}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.isLoading && (\r\n                  <p style={{ marginLeft: 20 }}>loading...</p>\r\n                )}\r\n\r\n                {tableData &&\r\n                  this.stableSort(tableData, this.getSorting(order, orderBy))\r\n                    .slice(\r\n                      currentPage * rowsPerPage,\r\n                      currentPage * rowsPerPage + rowsPerPage\r\n                    )\r\n                    .map((item, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell align=\"center\">\r\n                          <IconButton onClick={() => this.onClickDelete(item)}>\r\n                            <Delete />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\" align=\"left\">\r\n                          {currentPage * rowsPerPage + index + 1}\r\n                        </TableCell>\r\n                        <TableCell align=\"left\">{item.firstname}</TableCell>\r\n                        <TableCell align=\"left\">{item.lastname}</TableCell>\r\n                        <TableCell align=\"left\">{item.email}</TableCell>\r\n                        <TableCell align=\"left\">{item.phonenumber}</TableCell>\r\n                        <TableCell align=\"left\">{item.profile[0].acceptCount}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n              </TableBody>\r\n            </Table>\r\n            <div>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                component=\"div\"\r\n                count={this.state.tableData.length}\r\n                rowsPerPage={this.state.rowsPerPage}\r\n                page={this.state.currentPage}\r\n                backIconButtonProps={{\r\n                  \"aria-label\": \"Previous Page\"\r\n                }}\r\n                nextIconButtonProps={{\r\n                  \"aria-label\": \"Next Page\"\r\n                }}\r\n                onChangePage={this.handleChangePage}\r\n                onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n              />\r\n            </div>\r\n          </Paper>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    mobileOpen: state.mobileOpen,\r\n    lang: state.menu.lang\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(UserTable));\r\n"]},"metadata":{},"sourceType":"module"}