{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\dashboard\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./styles.css\";\nimport Header from \"../../components/header\";\nimport Sidebar from \"./sidebar\";\nimport UserPanel from \"./userpanel\";\nimport Boat from \"./boat\";\nimport Schedule from \"./schedule\";\nimport Ads from \"./ads\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { isAuthenticated } from \"../../service/authentication\";\nimport setAuthToken from \"../../utils/setAuthToken\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport frLocale from \"date-fns/locale/fr\";\nimport enLocale from \"date-fns/locale/en-US\";\nimport deLocale from \"date-fns/locale/de\";\nimport itLocale from \"date-fns/locale/it\";\n\nclass DashBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected_tab: 1\n    };\n    this.onChangeTab = this.onChangeTab.bind(this);\n  }\n\n  componentWillMount() {\n    const jwtToken = localStorage.getItem(\"jwtToken\");\n    console.log(\"jwt\", jwtToken);\n\n    if (!isAuthenticated()) {\n      this.props.history.push(\"/\");\n    }\n\n    setAuthToken(jwtToken);\n  }\n\n  onChangeTab(index) {\n    this.setState({\n      selected_tab: index\n    });\n\n    if (index === 5) {\n      this.props.logoutUser(this.props.history);\n    }\n  }\n\n  render() {\n    const locale = [enLocale, frLocale, deLocale, itLocale];\n    return React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      locale: locale[this.props.lang],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Header, {\n      menuOn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Sidebar, {\n      ontab: this.onChangeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/dashboard/profile\",\n      component: UserPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/dashboard/boat\",\n      component: Boat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/dashboard/ads\",\n      component: Ads,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/dashboard/schedule\",\n      component: Schedule,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      from: \"/dashboard\",\n      to: \"/dashboard/profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nDashBoard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n  lang: state.menu.lang\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(withRouter(DashBoard));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/dashboard/index.js"],"names":["React","Component","Route","Switch","Redirect","withRouter","Header","Sidebar","UserPanel","Boat","Schedule","Ads","logoutUser","PropTypes","connect","isAuthenticated","setAuthToken","MuiPickersUtilsProvider","DateFnsUtils","frLocale","enLocale","deLocale","itLocale","DashBoard","constructor","props","state","selected_tab","onChangeTab","bind","componentWillMount","jwtToken","localStorage","getItem","console","log","history","push","index","setState","render","locale","lang","display","propTypes","func","isRequired","loading","bool","mapStateToProps","auth","menu"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./styles.css\";\r\nimport Header from \"../../components/header\";\r\nimport Sidebar from \"./sidebar\";\r\nimport UserPanel from \"./userpanel\";\r\nimport Boat from \"./boat\";\r\nimport Schedule from \"./schedule\";\r\nimport Ads from \"./ads\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { isAuthenticated } from \"../../service/authentication\";\r\nimport setAuthToken from \"../../utils/setAuthToken\";\r\n\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport frLocale from \"date-fns/locale/fr\";\r\nimport enLocale from \"date-fns/locale/en-US\";\r\nimport deLocale from \"date-fns/locale/de\";\r\nimport itLocale from \"date-fns/locale/it\";\r\nclass DashBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected_tab: 1\r\n    };\r\n    this.onChangeTab = this.onChangeTab.bind(this);\r\n  }\r\n\r\n  componentWillMount() {\r\n    const jwtToken = localStorage.getItem(\"jwtToken\");\r\n    console.log(\"jwt\", jwtToken);\r\n    if (!isAuthenticated()) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n    setAuthToken(jwtToken);\r\n  }\r\n\r\n  onChangeTab(index) {\r\n    this.setState({ selected_tab: index });\r\n    if (index === 5) {\r\n      this.props.logoutUser(this.props.history);\r\n    }\r\n  }\r\n  render() {\r\n    const locale = [enLocale, frLocale, deLocale, itLocale];\r\n\r\n    return (\r\n      <MuiPickersUtilsProvider\r\n        utils={DateFnsUtils}\r\n        locale={locale[this.props.lang]}\r\n      >\r\n        <div style={{ display: \"flex\" }}>\r\n          <Header menuOn={true} />\r\n          <Sidebar ontab={this.onChangeTab} />\r\n          <Switch>\r\n            <Route exact path=\"/dashboard/profile\" component={UserPanel} />\r\n            <Route path=\"/dashboard/boat\" component={Boat} />\r\n            <Route path=\"/dashboard/ads\" component={Ads} />\r\n            <Route path=\"/dashboard/schedule\" component={Schedule} />\r\n\r\n            <Redirect from=\"/dashboard\" to=\"/dashboard/profile\" />\r\n          </Switch>\r\n        </div>\r\n      </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n}\r\n\r\nDashBoard.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n  lang: state.menu.lang\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(withRouter(DashBoard));\r\n"]},"metadata":{},"sourceType":"module"}