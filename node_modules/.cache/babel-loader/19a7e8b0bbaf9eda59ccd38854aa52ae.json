{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\Auth\\\\resetpassword\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport config from \"../../../config/config\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst styles = theme => ({\n  paper: {\n    padding: 20,\n    alignItems: \"center\",\n    maxWidth: 400\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\nclass ResetPassword extends Component {\n  constructor() {\n    super();\n\n    this.handleTextInput = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      if (!this.state.password) {\n        NotificationManager.warning(\"Please type your password\");\n        return;\n      }\n\n      axios.request({\n        url: \"/api/users/resetpassword\",\n        baseURL: config.apiBaseUrl,\n        method: \"PUT\",\n        data: {\n          newPassword: this.state.password,\n          token: this.props.match.params.token\n        }\n      }).then(res => {\n        console.log(\"resetpassword\", res);\n        NotificationManager.success(\"Reset password successfully.\");\n        this.setState({\n          isResetSuccessed: true\n        });\n      }).catch(err => {\n        console.log(\"resetpassword err\", err);\n        NotificationManager.error(\"Failed. Please try again.\");\n      });\n    };\n\n    this.backToLogin = () => {\n      this.props.history.push(\"/\");\n    };\n\n    this.state = {\n      password: \"\",\n      isAbleReset: false,\n      isResetSuccessed: false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"token\", this.props.match.params.token);\n    axios.request({\n      url: \"/api/users/resetpassword\",\n      baseURL: config.apiBaseUrl,\n      method: \"POST\",\n      data: {\n        token: this.props.match.params.token\n      }\n    }).then(res => {\n      console.log(\"resetpassword1\", res);\n      this.setState({\n        isAbleReset: true\n      }); // NotificationManager.success(\"We sent a message to your password.\");\n    }).catch(err => {\n      console.log(\"forgotpassword err\", err);\n      this.setState({\n        isAbleReset: false\n      }); // NotificationManager.error(\"Failed. Please try again.\");\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          password = _this$state.password,\n          isAbleReset = _this$state.isAbleReset,\n          isResetSuccessed = _this$state.isResetSuccessed;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"sm\",\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Reset your password\")), isAbleReset ? React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Enter your new password.\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      placeholder: \"new password\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: password,\n      onChange: this.handleTextInput(\"password\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, !isResetSuccessed ? React.createElement(Button, {\n      variant: \"contained\" //   disabled={this.props.loading}\n      ,\n      color: \"primary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Reset Password\") : React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.backToLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Back To Login\"))) : React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Something went wrong.\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Please try again.\"))));\n  }\n\n}\n\nexport default withStyles(styles)(withRouter(ResetPassword));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/Auth/resetpassword/index.js"],"names":["React","Component","Link","withRouter","FormGroup","TextField","withStyles","Button","validator","Container","FormControlLabel","Paper","axios","config","NotificationManager","styles","theme","paper","padding","alignItems","maxWidth","container","display","flexDirection","justifyContent","ResetPassword","constructor","handleTextInput","input","e","setState","target","value","onSubmit","state","password","warning","request","url","baseURL","apiBaseUrl","method","data","newPassword","token","props","match","params","then","res","console","log","success","isResetSuccessed","catch","err","error","backToLogin","history","push","isAbleReset","componentDidMount","render","classes","textField","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport validator from \"validator\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/config\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: 20,\r\n    alignItems: \"center\",\r\n    maxWidth: 400\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n});\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      password: \"\",\r\n      isAbleReset: false,\r\n      isResetSuccessed: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"token\", this.props.match.params.token);\r\n    axios\r\n      .request({\r\n        url: \"/api/users/resetpassword\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"POST\",\r\n        data: { token: this.props.match.params.token }\r\n      })\r\n      .then(res => {\r\n        console.log(\"resetpassword1\", res);\r\n        this.setState({ isAbleReset: true });\r\n        // NotificationManager.success(\"We sent a message to your password.\");\r\n      })\r\n      .catch(err => {\r\n        console.log(\"forgotpassword err\", err);\r\n        this.setState({ isAbleReset: false });\r\n        // NotificationManager.error(\"Failed. Please try again.\");\r\n      });\r\n  }\r\n\r\n  handleTextInput = input => e => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    if (!this.state.password) {\r\n      NotificationManager.warning(\"Please type your password\");\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .request({\r\n        url: \"/api/users/resetpassword\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"PUT\",\r\n        data: {\r\n          newPassword: this.state.password,\r\n          token: this.props.match.params.token\r\n        }\r\n      })\r\n      .then(res => {\r\n        console.log(\"resetpassword\", res);\r\n        NotificationManager.success(\"Reset password successfully.\");\r\n        this.setState({isResetSuccessed: true});\r\n      })\r\n      .catch(err => {\r\n        console.log(\"resetpassword err\", err);\r\n        NotificationManager.error(\"Failed. Please try again.\");\r\n      });\r\n  };\r\n\r\n  backToLogin = () => {\r\n      this.props.history.push(\"/\");\r\n  }\r\n  render() {\r\n    const { password, isAbleReset, isResetSuccessed } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        <Container maxWidth=\"sm\" className={classes.container}>\r\n          <div>\r\n            <h1>Reset your password</h1>\r\n          </div>\r\n          {isAbleReset ? (\r\n            <Paper className={classes.paper}>\r\n              <p>Enter your new password.</p>\r\n              <FormGroup>\r\n                <TextField\r\n                  required\r\n                  id=\"password\"\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  placeholder=\"new password\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={password}\r\n                  onChange={this.handleTextInput(\"password\")}\r\n                />\r\n              </FormGroup>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"center\",\r\n                  paddingTop: 10\r\n                }}\r\n              >\r\n              {!isResetSuccessed ?\r\n                <Button\r\n                  variant=\"contained\"\r\n                //   disabled={this.props.loading}\r\n                  color=\"primary\"\r\n                  onClick={this.onSubmit}\r\n                >\r\n                  Reset Password\r\n                </Button>\r\n                :\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={this.backToLogin}\r\n                >\r\n                  Back To Login\r\n                </Button>\r\n              }\r\n              </div>\r\n            </Paper>\r\n          ) : (\r\n            <Paper className={classes.paper}>\r\n              <p>Something went wrong.</p>\r\n              <p>Please try again.</p>\r\n            </Paper>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(withRouter(ResetPassword));\r\n"]},"metadata":{},"sourceType":"module"}