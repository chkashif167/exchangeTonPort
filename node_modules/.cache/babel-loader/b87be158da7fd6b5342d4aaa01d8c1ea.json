{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\components\\\\payment\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { countryList, months, years } from \"../../constants/country.json\";\nimport { Button } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { typography } from \"@material-ui/system\";\nimport axios from \"axios\";\nimport config from \"../../config/config\";\nimport Image from \"material-ui-image\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LocationOnRounded from \"@material-ui/icons/LocationOnRounded\";\nimport Paper from \"@material-ui/core/Paper\";\nimport clsx from \"clsx\";\nimport * as types from \"../../actions/types\";\nimport { connect } from \"react-redux\";\n\nconst styles = theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    marginTop: theme.spacing(2)\n  },\n  group: {\n    margin: theme.spacing(1, 0)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) // width: 400,\n\n  },\n  card: {\n    padding: 20\n  },\n  card_selected: {\n    backgroundColor: \"#eceff1\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n\n  }\n});\n\nclass Payment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTextInput = input => e => {\n      this.setState({\n        [input]: e.target.value\n      }, function () {\n        if ([input] == \"newPassword2\") {\n          if (this.state.newPassword === this.state.newPassword2) {\n            this.setState({\n              isValidPassword2: true\n            });\n          } else {\n            this.setState({\n              isValidPassword2: false\n            });\n          }\n        }\n      });\n    };\n\n    this.handleProceed = () => {\n      axios.request({\n        url: \"/api/users/payment\",\n        baseURL: config.apiBaseUrl,\n        method: \"POST\",\n        data: {}\n      }).then(res => {\n        console.log(\"payment\", res);\n        this.props.dispatch({\n          type: types.CURRENT_STEP,\n          payload: res.data.step\n        });\n      }).catch(err => {\n        console.log(\"payment error\", err);\n      });\n    };\n\n    this.state = {\n      payMethod: \"card\",\n      fullname: \"\",\n      billingAddress: \"\",\n      city: \"\",\n      zipCode: \"\",\n      country: \"\",\n      cardHolder: \"\",\n      cardNumber: \"\",\n      expMonth: \"\",\n      expYear: \"\",\n      CVCNumber: \"\"\n    };\n  }\n\n  componentDidMount() {}\n\n  selectCountry(val) {\n    this.setState({\n      country: val\n    });\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          payMethod = _this$state.payMethod,\n          fullname = _this$state.fullname,\n          billingAddress = _this$state.billingAddress,\n          city = _this$state.city,\n          zipCode = _this$state.zipCode,\n          country = _this$state.country,\n          cardHolder = _this$state.cardHolder,\n          cardNumber = _this$state.cardNumber,\n          expMonth = _this$state.expMonth,\n          expYear = _this$state.expYear,\n          CVCNumber = _this$state.CVCNumber;\n    return React.createElement(\"main\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Payment\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Chose payment method below\"), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      spacing: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        minWidth: 280,\n        maxWidth: 480\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: clsx(classes.card, classes.card_selected),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Biling Info\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"fullname\",\n      label: \"FULL NAME\",\n      placeholder: \"John Doe\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: fullname,\n      onChange: this.handleTextInput(\"fullname\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"billingaddress\",\n      label: \"BILLING ADDRESS\",\n      placeholder: \"London\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: billingAddress,\n      onChange: this.handleTextInput(\"billingAddress\"),\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"locationOn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, React.createElement(LocationOnRounded, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        })))\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"city\",\n      label: \"CITY\",\n      placeholder: \"LONDON\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: city,\n      onChange: this.handleTextInput(\"city\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"zipcode\",\n      label: \"ZIP CODE\",\n      placeholder: \"1234\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: zipCode,\n      onChange: this.handleTextInput(\"zipCode\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"age-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"COUNTRY\"), React.createElement(Select, {\n      value: country,\n      onChange: this.handleTextInput(\"country\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, countryList.map((item, index) => {\n      return React.createElement(MenuItem, {\n        key: index,\n        value: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, item.name);\n    })))))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      style: {\n        minWidth: 280,\n        maxWidth: 480\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Paper, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Credit Card Info\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"cardholder\",\n      label: \"CARD HOLDERS\",\n      placeholder: \"John Doe\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: cardHolder,\n      onChange: this.handleTextInput(\"cardHolder\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"cardnumber\",\n      label: \"CARD NUMBER\",\n      placeholder: \"1234-1234-1234-1234\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: billingAddress,\n      onChange: this.handleTextInput(\"billingAddress\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }), React.createElement(FormControl, {\n      className: classes.formControl,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"EXP.MONTH\"), React.createElement(Select, {\n      value: expMonth,\n      onChange: this.handleTextInput(\"expMonth\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, months.map((item, index) => {\n      return React.createElement(MenuItem, {\n        key: index,\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, item);\n    }))), React.createElement(FormControl, {\n      className: classes.formControl,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"EXP.YEAR\"), React.createElement(Select, {\n      value: expYear,\n      onChange: this.handleTextInput(\"expYear\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, years.map((item, index) => {\n      return React.createElement(MenuItem, {\n        key: index,\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, item);\n    }))), React.createElement(TextField, {\n      required: true,\n      id: \"cvcnumber\",\n      label: \"CVC NUMBER\",\n      placeholder: \"789\",\n      className: classes.textField,\n      margin: \"normal\",\n      value: CVCNumber,\n      onChange: this.handleTextInput(\"CVCNumber\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: 20\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      onClick: this.handleProceed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"PROCEED\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps)(withStyles(styles)(Payment));","map":{"version":3,"sources":["F:/React/upwork/test/src/components/payment/index.js"],"names":["React","Component","withStyles","Grid","FormHelperText","FormControlLabel","FormControl","FormLabel","FormGroup","TextField","Select","InputLabel","MenuItem","countryList","months","years","Button","Divider","typography","axios","config","Image","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","InputAdornment","IconButton","LocationOnRounded","Paper","clsx","types","connect","styles","theme","content","flexGrow","padding","spacing","formControl","margin","marginTop","group","textField","marginLeft","marginRight","card","card_selected","backgroundColor","media","height","paddingTop","Payment","constructor","props","handleTextInput","input","e","setState","target","value","state","newPassword","newPassword2","isValidPassword2","handleProceed","request","url","baseURL","apiBaseUrl","method","data","then","res","console","log","dispatch","type","CURRENT_STEP","payload","step","catch","err","payMethod","fullname","billingAddress","city","zipCode","country","cardHolder","cardNumber","expMonth","expYear","CVCNumber","componentDidMount","selectCountry","val","render","classes","minWidth","maxWidth","endAdornment","map","item","index","name","display","flexDirection","justifyContent","button","mapStateToProps","isAuthenticated","auth","loading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { countryList, months, years } from \"../../constants/country.json\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { typography } from \"@material-ui/system\";\r\nimport axios from \"axios\";\r\nimport config from \"../../config/config\";\r\nimport Image from \"material-ui-image\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport LocationOnRounded from \"@material-ui/icons/LocationOnRounded\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport clsx from \"clsx\";\r\nimport * as types from \"../../actions/types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst styles = theme => ({\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3)\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  group: {\r\n    margin: theme.spacing(1, 0)\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n    // width: 400,\r\n  },\r\n  card: {\r\n    padding: 20\r\n  },\r\n  card_selected: {\r\n    backgroundColor: \"#eceff1\"\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  }\r\n});\r\nclass Payment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      payMethod: \"card\",\r\n\r\n      fullname: \"\",\r\n      billingAddress: \"\",\r\n      city: \"\",\r\n      zipCode: \"\",\r\n      country: \"\",\r\n\r\n      cardHolder: \"\",\r\n      cardNumber: \"\",\r\n      expMonth: \"\",\r\n      expYear: \"\",\r\n      CVCNumber: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  handleTextInput = input => e => {\r\n    this.setState({ [input]: e.target.value }, function() {\r\n      if ([input] == \"newPassword2\") {\r\n        if (this.state.newPassword === this.state.newPassword2) {\r\n          this.setState({ isValidPassword2: true });\r\n        } else {\r\n          this.setState({ isValidPassword2: false });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  selectCountry(val) {\r\n    this.setState({ country: val });\r\n  }\r\n\r\n  handleProceed = () => {\r\n    axios\r\n      .request({\r\n        url: \"/api/users/payment\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"POST\",\r\n        data: {}\r\n      })\r\n      .then(res => {\r\n        console.log(\"payment\", res);\r\n        this.props.dispatch({\r\n          type: types.CURRENT_STEP,\r\n          payload: res.data.step\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"payment error\", err);\r\n      });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      payMethod,\r\n      fullname,\r\n      billingAddress,\r\n      city,\r\n      zipCode,\r\n      country,\r\n      cardHolder,\r\n      cardNumber,\r\n      expMonth,\r\n      expYear,\r\n      CVCNumber\r\n    } = this.state;\r\n    return (\r\n      <main className={classes.content}>\r\n        <h1>Payment</h1>\r\n        <p>Chose payment method below</p>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={6} style={{ minWidth: 280, maxWidth: 480 }}>\r\n            <Paper className={clsx(classes.card, classes.card_selected)}>\r\n              <p>Biling Info</p>\r\n              <FormGroup>\r\n                <TextField\r\n                  required\r\n                  id=\"fullname\"\r\n                  label=\"FULL NAME\"\r\n                  placeholder=\"John Doe\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={fullname}\r\n                  onChange={this.handleTextInput(\"fullname\")}\r\n                />\r\n\r\n                <TextField\r\n                  required\r\n                  id=\"billingaddress\"\r\n                  label=\"BILLING ADDRESS\"\r\n                  placeholder=\"London\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={billingAddress}\r\n                  onChange={this.handleTextInput(\"billingAddress\")}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton aria-label=\"locationOn\">\r\n                          <LocationOnRounded />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"city\"\r\n                  label=\"CITY\"\r\n                  placeholder=\"LONDON\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={city}\r\n                  onChange={this.handleTextInput(\"city\")}\r\n                />\r\n                <TextField\r\n                  required\r\n                  id=\"zipcode\"\r\n                  label=\"ZIP CODE\"\r\n                  placeholder=\"1234\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={zipCode}\r\n                  onChange={this.handleTextInput(\"zipCode\")}\r\n                />\r\n                <FormControl className={classes.formControl} required>\r\n                  <InputLabel htmlFor=\"age-simple\">COUNTRY</InputLabel>\r\n                  <Select\r\n                    value={country}\r\n                    onChange={this.handleTextInput(\"country\")}\r\n                  >\r\n                    {countryList.map((item, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={item.name}>\r\n                          {item.name}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n              </FormGroup>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={6} style={{ minWidth: 280, maxWidth: 480 }}>\r\n            <Paper className={classes.card}>\r\n              <p>Credit Card Info</p>\r\n              <FormGroup>\r\n                <TextField\r\n                  required\r\n                  id=\"cardholder\"\r\n                  label=\"CARD HOLDERS\"\r\n                  placeholder=\"John Doe\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={cardHolder}\r\n                  onChange={this.handleTextInput(\"cardHolder\")}\r\n                />\r\n\r\n                <TextField\r\n                  required\r\n                  id=\"cardnumber\"\r\n                  label=\"CARD NUMBER\"\r\n                  placeholder=\"1234-1234-1234-1234\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={billingAddress}\r\n                  onChange={this.handleTextInput(\"billingAddress\")}\r\n                />\r\n                <FormControl className={classes.formControl} required>\r\n                  <InputLabel>EXP.MONTH</InputLabel>\r\n                  <Select\r\n                    value={expMonth}\r\n                    onChange={this.handleTextInput(\"expMonth\")}\r\n                  >\r\n                    {months.map((item, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={item}>\r\n                          {item}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.formControl} required>\r\n                  <InputLabel>EXP.YEAR</InputLabel>\r\n                  <Select\r\n                    value={expYear}\r\n                    onChange={this.handleTextInput(\"expYear\")}\r\n                  >\r\n                    {years.map((item, index) => {\r\n                      return (\r\n                        <MenuItem key={index} value={item}>\r\n                          {item}\r\n                        </MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <TextField\r\n                  required\r\n                  id=\"cvcnumber\"\r\n                  label=\"CVC NUMBER\"\r\n                  placeholder=\"789\"\r\n                  className={classes.textField}\r\n                  margin=\"normal\"\r\n                  value={CVCNumber}\r\n                  onChange={this.handleTextInput(\"CVCNumber\")}\r\n                />\r\n              </FormGroup>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            paddingTop: 20\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            onClick={this.handleProceed}\r\n          >\r\n            PROCEED\r\n          </Button>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Payment));\r\n"]},"metadata":{},"sourceType":"module"}