{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\Auth\\\\login\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport { loginUser } from \"../../../actions/authActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { saveLoginInfo, LoadLoginInfo } from \"../../../service/authentication\";\nimport t from \"../../../constants/language\";\nimport * as types from \"../../../actions/types\";\nimport axios from \"axios\";\nimport setAuthToken from \"../../../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport config from \"../../../config/config\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst styles = theme => ({\n  content: {// flexGrow: 1,\n    // // padding: theme.spacing(2),\n    // // minWidth: 280,\n    // [theme.breakpoints.up(\"sm\")]: {\n    //   minWidth: 480\n    // },\n    // [theme.breakpoints.down(\"sm\")]: {\n    //   minWidth: 190\n    // }\n    // minWidth: 190\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1) // width: 400,\n\n  },\n  checkbox: {\n    marginLeft: -2,\n    marginTop: 4,\n    color: \"#303f9f\"\n  },\n  forgot: {\n    color: \"#303f9f\"\n  }\n});\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.handleClose = () => {\n      this.setState({\n        toastOpen: false\n      });\n    };\n\n    this.validation = () => {\n      const _this$state = this.state,\n            email = _this$state.email,\n            password = _this$state.password;\n      const errors = {};\n      let isError = false;\n\n      if (!validator.isEmail(email)) {\n        isError = true;\n        errors.email = \"Invalid email\";\n      }\n\n      if (password.length < 6) {\n        isError = true;\n        errors.password = \"password must be more than 6 letters\";\n      }\n\n      this.setState({\n        errors: errors\n      });\n      return !isError;\n    };\n\n    this.handleTextInput = input => e => {\n      this.setState({\n        [input]: e.target.value\n      }, function () {\n        if (this.state.clicked) this.validation();\n      });\n    };\n\n    this.handleRememberMe = () => {\n      this.setState({\n        rememberMe: !this.state.rememberMe\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        clicked: true\n      });\n\n      if (!this.validation()) {\n        return;\n      }\n\n      if (this.state.rememberMe) {\n        saveLoginInfo(this.state.email, this.state.password);\n      } else {\n        saveLoginInfo(\"\", \"\");\n      }\n\n      const newUser = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      console.log(newUser);\n      this.props.loginUser(newUser, this.props.history);\n    };\n\n    this.loginUser = (userData, history) => {\n      this.props.dispatch({\n        type: types.USER_LOADING,\n        payload: true\n      });\n      axios.request({\n        url: \"/api/users/login\",\n        baseURL: config.apiBaseUrl,\n        method: \"post\",\n        data: userData\n      }).then(res => {\n        // Save to localStorage\n        // Set token to localStorage\n        const token = res.data.token;\n        localStorage.setItem(\"jwtToken\", token); // Set token to Auth header\n\n        setAuthToken(token); // Decode token to get user data\n\n        const decoded = jwt_decode(token); // Set current user\n\n        this.props.dispatch({\n          type: types.SET_CURRENT_USER,\n          payload: decoded\n        });\n        this.props.dispatch({\n          type: types.USER_LOADING,\n          payload: false\n        });\n        history.push(\"/dashboard\");\n      }).catch(err => {\n        try {\n          if (err.response.data.title === \"Email\") {\n            NotificationManager.error(\"Email not found\");\n          }\n\n          if (err.response.data.title === \"Password\") {\n            NotificationManager.error(\"Password incorrect\");\n          }\n        } catch (err) {\n          NotificationManager.error(\"Server error\");\n        }\n\n        this.props.dispatch({\n          type: types.USER_LOADING,\n          payload: false\n        });\n      });\n    };\n\n    this.handleKeyDown = e => {\n      if (e.keyCode == 13) this.onSubmit();\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      rememberMe: false,\n      errors: {\n        email: \"\",\n        password: \"\"\n      },\n      clicked: false\n    };\n  }\n\n  componentDidMount() {\n    const logininfo = LoadLoginInfo();\n\n    if (logininfo.email) {\n      this.setState({\n        email: logininfo.email,\n        password: logininfo.password,\n        rememberMe: true\n      });\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          errors = _this$state2.errors,\n          rememberMe = _this$state2.rememberMe;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      className: classes.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"email\",\n      label: t[this.props.lang].email,\n      type: \"email\",\n      placeholder: t[this.props.lang].enter_your_email,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.email ? true : false,\n      value: email,\n      onChange: this.handleTextInput(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      required: true,\n      id: \"password\",\n      label: t[this.props.lang].password,\n      type: \"password\",\n      placeholder: t[this.props.lang].enter_your_password,\n      className: classes.textField,\n      margin: \"normal\",\n      error: errors.password ? true : false,\n      value: password,\n      onChange: this.handleTextInput(\"password\"),\n      onKeyDown: this.handleKeyDown,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      className: classes.checkbox,\n      control: React.createElement(Checkbox, {\n        checked: rememberMe,\n        onChange: this.handleRememberMe,\n        value: \"rememberMe\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }),\n      label: t[this.props.lang].remember_me,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"/#/password_reset\",\n      target: \"_blank\",\n      className: classes.forgot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, t[this.props.lang].forgot_password))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: this.props.loading,\n      color: \"primary\",\n      onClick: this.onSubmit,\n      default: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, t[this.props.lang].login)));\n  }\n\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  loading: state.auth.loading,\n  lang: state.menu.lang\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withStyles(styles)(withRouter(Login)));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/Auth/login/index.js"],"names":["React","Component","withRouter","FormGroup","TextField","withStyles","Button","validator","loginUser","PropTypes","connect","FormControlLabel","Checkbox","saveLoginInfo","LoadLoginInfo","t","types","axios","setAuthToken","jwt_decode","config","NotificationManager","styles","theme","content","textField","marginLeft","spacing","marginRight","checkbox","marginTop","color","forgot","Login","constructor","handleClose","setState","toastOpen","validation","state","email","password","errors","isError","isEmail","length","handleTextInput","input","e","target","value","clicked","handleRememberMe","rememberMe","onSubmit","newUser","console","log","props","history","userData","dispatch","type","USER_LOADING","payload","request","url","baseURL","apiBaseUrl","method","data","then","res","token","localStorage","setItem","decoded","SET_CURRENT_USER","push","catch","err","response","title","error","handleKeyDown","keyCode","componentDidMount","logininfo","render","classes","lang","enter_your_email","enter_your_password","display","flexDirection","justifyContent","alignItems","remember_me","forgot_password","paddingTop","loading","login","propTypes","func","isRequired","bool","mapStateToProps","isAuthenticated","auth","menu"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,iCAA7C;AACA,OAAOC,CAAP,MAAc,6BAAd;AACA,OAAO,KAAKC,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,mBAAT,QAAoC,qBAApC;;AACA,MAAMC,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,OAAO,EAAE,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVO,GADc;AAavBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADH;AAETC,IAAAA,WAAW,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAd,CAFJ,CAGT;;AAHS,GAbY;AAkBvBE,EAAAA,QAAQ,EAAE;AACRH,IAAAA,UAAU,EAAE,CAAC,CADL;AAERI,IAAAA,SAAS,EAAE,CAFH;AAGRC,IAAAA,KAAK,EAAE;AAHC,GAlBa;AAuBvBC,EAAAA,MAAM,EAAE;AACND,IAAAA,KAAK,EAAE;AADD;AAvBe,CAAL,CAApB;;AA2BA,MAAME,KAAN,SAAoBhC,SAApB,CAA8B;AAC5BiC,EAAAA,WAAW,GAAG;AACZ;;AADY,SA0BdC,WA1Bc,GA0BA,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KA5Ba;;AAAA,SA6BdC,UA7Bc,GA6BD,MAAM;AAAA,0BACW,KAAKC,KADhB;AAAA,YACTC,KADS,eACTA,KADS;AAAA,YACFC,QADE,eACFA,QADE;AAGjB,YAAMC,MAAM,GAAG,EAAf;AACA,UAAIC,OAAO,GAAG,KAAd;;AACA,UAAI,CAACpC,SAAS,CAACqC,OAAV,CAAkBJ,KAAlB,CAAL,EAA+B;AAC7BG,QAAAA,OAAO,GAAG,IAAV;AACAD,QAAAA,MAAM,CAACF,KAAP,GAAe,eAAf;AACD;;AACD,UAAIC,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvBF,QAAAA,OAAO,GAAG,IAAV;AACAD,QAAAA,MAAM,CAACD,QAAP,GAAkB,sCAAlB;AACD;;AACD,WAAKL,QAAL,CAAc;AAAEM,QAAAA,MAAM,EAAEA;AAAV,OAAd;AACA,aAAO,CAACC,OAAR;AACD,KA5Ca;;AAAA,SA8CdG,eA9Cc,GA8CIC,KAAK,IAAIC,CAAC,IAAI;AAC9B,WAAKZ,QAAL,CAAc;AAAE,SAACW,KAAD,GAASC,CAAC,CAACC,MAAF,CAASC;AAApB,OAAd,EAA2C,YAAW;AACpD,YAAI,KAAKX,KAAL,CAAWY,OAAf,EAAwB,KAAKb,UAAL;AACzB,OAFD;AAGD,KAlDa;;AAAA,SAoDdc,gBApDc,GAoDK,MAAM;AACvB,WAAKhB,QAAL,CAAc;AAAEiB,QAAAA,UAAU,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAA1B,OAAd;AACD,KAtDa;;AAAA,SAuDdC,QAvDc,GAuDH,MAAM;AACf,WAAKlB,QAAL,CAAc;AAAEe,QAAAA,OAAO,EAAE;AAAX,OAAd;;AACA,UAAI,CAAC,KAAKb,UAAL,EAAL,EAAwB;AACtB;AACD;;AAED,UAAI,KAAKC,KAAL,CAAWc,UAAf,EAA2B;AACzBxC,QAAAA,aAAa,CAAC,KAAK0B,KAAL,CAAWC,KAAZ,EAAmB,KAAKD,KAAL,CAAWE,QAA9B,CAAb;AACD,OAFD,MAEO;AACL5B,QAAAA,aAAa,CAAC,EAAD,EAAK,EAAL,CAAb;AACD;;AAED,YAAM0C,OAAO,GAAG;AACdf,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KADJ;AAEdC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFP,OAAhB;AAIAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,KAAL,CAAWlD,SAAX,CAAqB+C,OAArB,EAA8B,KAAKG,KAAL,CAAWC,OAAzC;AACD,KAzEa;;AAAA,SA2EdnD,SA3Ec,GA2EF,CAACoD,QAAD,EAAWD,OAAX,KAAuB;AACjC,WAAKD,KAAL,CAAWG,QAAX,CAAoB;AAAEC,QAAAA,IAAI,EAAE9C,KAAK,CAAC+C,YAAd;AAA4BC,QAAAA,OAAO,EAAE;AAArC,OAApB;AACA/C,MAAAA,KAAK,CACFgD,OADH,CACW;AACPC,QAAAA,GAAG,EAAE,kBADE;AAEPC,QAAAA,OAAO,EAAE/C,MAAM,CAACgD,UAFT;AAGPC,QAAAA,MAAM,EAAE,MAHD;AAIPC,QAAAA,IAAI,EAAEV;AAJC,OADX,EAOGW,IAPH,CAOQC,GAAG,IAAI;AACX;AACA;AAFW,cAGHC,KAHG,GAGOD,GAAG,CAACF,IAHX,CAGHG,KAHG;AAIXC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJW,CAKX;;AACAvD,QAAAA,YAAY,CAACuD,KAAD,CAAZ,CANW,CAOX;;AACA,cAAMG,OAAO,GAAGzD,UAAU,CAACsD,KAAD,CAA1B,CARW,CASX;;AACA,aAAKf,KAAL,CAAWG,QAAX,CAAoB;AAClBC,UAAAA,IAAI,EAAE9C,KAAK,CAAC6D,gBADM;AAElBb,UAAAA,OAAO,EAAEY;AAFS,SAApB;AAIA,aAAKlB,KAAL,CAAWG,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE9C,KAAK,CAAC+C,YAAd;AAA4BC,UAAAA,OAAO,EAAE;AAArC,SAApB;AACAL,QAAAA,OAAO,CAACmB,IAAR,CAAa,YAAb;AACD,OAvBH,EAwBGC,KAxBH,CAwBSC,GAAG,IAAI;AACZ,YAAI;AACF,cAAIA,GAAG,CAACC,QAAJ,CAAaX,IAAb,CAAkBY,KAAlB,KAA4B,OAAhC,EAAyC;AACvC7D,YAAAA,mBAAmB,CAAC8D,KAApB,CAA0B,iBAA1B;AACD;;AACD,cAAIH,GAAG,CAACC,QAAJ,CAAaX,IAAb,CAAkBY,KAAlB,KAA4B,UAAhC,EAA4C;AAC1C7D,YAAAA,mBAAmB,CAAC8D,KAApB,CAA0B,oBAA1B;AACD;AACF,SAPD,CAOE,OAAOH,GAAP,EAAY;AACZ3D,UAAAA,mBAAmB,CAAC8D,KAApB,CAA0B,cAA1B;AACD;;AACD,aAAKzB,KAAL,CAAWG,QAAX,CAAoB;AAAEC,UAAAA,IAAI,EAAE9C,KAAK,CAAC+C,YAAd;AAA4BC,UAAAA,OAAO,EAAE;AAArC,SAApB;AACD,OApCH;AAqCD,KAlHa;;AAAA,SAoHdoB,aApHc,GAoHEpC,CAAC,IAAI;AACnB,UAAIA,CAAC,CAACqC,OAAF,IAAa,EAAjB,EAAqB,KAAK/B,QAAL;AACtB,KAtHa;;AAEZ,SAAKf,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXY,MAAAA,UAAU,EAAE,KAHD;AAKXX,MAAAA,MAAM,EAAE;AACNF,QAAAA,KAAK,EAAE,EADD;AAENC,QAAAA,QAAQ,EAAE;AAFJ,OALG;AASXU,MAAAA,OAAO,EAAE;AATE,KAAb;AAWD;;AAEDmC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAGzE,aAAa,EAA/B;;AACA,QAAIyE,SAAS,CAAC/C,KAAd,EAAqB;AACnB,WAAKJ,QAAL,CAAc;AACZI,QAAAA,KAAK,EAAE+C,SAAS,CAAC/C,KADL;AAEZC,QAAAA,QAAQ,EAAE8C,SAAS,CAAC9C,QAFR;AAGZY,QAAAA,UAAU,EAAE;AAHA,OAAd;AAKD;AACF;;AA+FDmC,EAAAA,MAAM,GAAG;AAAA,yBACyC,KAAKjD,KAD9C;AAAA,UACCC,KADD,gBACCA,KADD;AAAA,UACQC,QADR,gBACQA,QADR;AAAA,UACkBC,MADlB,gBACkBA,MADlB;AAAA,UAC0BW,UAD1B,gBAC0BA,UAD1B;AAAA,UAECoC,OAFD,GAEa,KAAK/B,KAFlB,CAEC+B,OAFD;AAGP,WACE;AAAK,MAAA,SAAS,EAAEA,OAAO,CAACjE,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,OAFL;AAGE,MAAA,KAAK,EAAET,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBlD,KAH5B;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,WAAW,EAAEzB,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBC,gBALlC;AAME,MAAA,SAAS,EAAEF,OAAO,CAAChE,SANrB;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,KAAK,EAAEiB,MAAM,CAACF,KAAP,GAAe,IAAf,GAAsB,KAR/B;AASE,MAAA,KAAK,EAAEA,KATT;AAUE,MAAA,QAAQ,EAAE,KAAKM,eAAL,CAAqB,OAArB,CAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAcE,oBAAC,SAAD;AACE,MAAA,QAAQ,MADV;AAEE,MAAA,EAAE,EAAC,UAFL;AAGE,MAAA,KAAK,EAAE/B,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBjD,QAH5B;AAIE,MAAA,IAAI,EAAC,UAJP;AAKE,MAAA,WAAW,EAAE1B,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBE,mBALlC;AAME,MAAA,SAAS,EAAEH,OAAO,CAAChE,SANrB;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,KAAK,EAAEiB,MAAM,CAACD,QAAP,GAAkB,IAAlB,GAAyB,KARlC;AASE,MAAA,KAAK,EAAEA,QATT;AAUE,MAAA,QAAQ,EAAE,KAAKK,eAAL,CAAqB,UAArB,CAVZ;AAWE,MAAA,SAAS,EAAE,KAAKsC,aAXlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EA4BE;AACE,MAAA,KAAK,EAAE;AACLS,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,cAAc,EAAE,eAHX;AAILC,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,gBAAD;AACE,MAAA,SAAS,EAAEP,OAAO,CAAC5D,QADrB;AAEE,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAEwB,UADX;AAEE,QAAA,QAAQ,EAAE,KAAKD,gBAFjB;AAGE,QAAA,KAAK,EAAC,YAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ;AAUE,MAAA,KAAK,EAAErC,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBO,WAV5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAqBE;AACE,MAAA,IAAI,EAAC,mBADP;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,SAAS,EAAER,OAAO,CAACzD,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGjB,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBQ,eALtB,CArBF,CA5BF,CADF,EA2DE;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,KAFV;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILI,QAAAA,UAAU,EAAE;AAJP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,QAAQ,EAAE,KAAKzC,KAAL,CAAW0C,OAFvB;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,OAAO,EAAE,KAAK9C,QAJhB;AAKE,MAAA,OAAO,MALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGvC,CAAC,CAAC,KAAK2C,KAAL,CAAWgC,IAAZ,CAAD,CAAmBW,KARtB,CARF,CA3DF,CADF;AAiFD;;AA5M2B;;AA+M9BpE,KAAK,CAACqE,SAAN,GAAkB;AAChB9F,EAAAA,SAAS,EAAEC,SAAS,CAAC8F,IAAV,CAAeC,UADV;AAEhBJ,EAAAA,OAAO,EAAE3F,SAAS,CAACgG,IAAV,CAAeD;AAFR,CAAlB;;AAKA,MAAME,eAAe,GAAGnE,KAAK,KAAK;AAChCoE,EAAAA,eAAe,EAAEpE,KAAK,CAACqE,IAAN,CAAWD,eADI;AAEhCP,EAAAA,OAAO,EAAE7D,KAAK,CAACqE,IAAN,CAAWR,OAFY;AAGhCV,EAAAA,IAAI,EAAEnD,KAAK,CAACsE,IAAN,CAAWnB;AAHe,CAAL,CAA7B;;AAKA,eAAehF,OAAO,CAACgG,eAAD,EAAkB;AAAElG,EAAAA;AAAF,CAAlB,CAAP,CACbH,UAAU,CAACiB,MAAD,CAAV,CAAmBpB,UAAU,CAAC+B,KAAD,CAA7B,CADa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport validator from \"validator\";\r\nimport { loginUser } from \"../../../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { saveLoginInfo, LoadLoginInfo } from \"../../../service/authentication\";\r\nimport t from \"../../../constants/language\";\r\nimport * as types from \"../../../actions/types\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"../../../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport config from \"../../../config/config\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nconst styles = theme => ({\r\n  content: {\r\n    // flexGrow: 1,\r\n    // // padding: theme.spacing(2),\r\n    // // minWidth: 280,\r\n    // [theme.breakpoints.up(\"sm\")]: {\r\n    //   minWidth: 480\r\n    // },\r\n    // [theme.breakpoints.down(\"sm\")]: {\r\n    //   minWidth: 190\r\n    // }\r\n    // minWidth: 190\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n    // width: 400,\r\n  },\r\n  checkbox: {\r\n    marginLeft: -2,\r\n    marginTop: 4,\r\n    color: \"#303f9f\"\r\n  },\r\n  forgot: {\r\n    color: \"#303f9f\"\r\n  }\r\n});\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n\r\n      errors: {\r\n        email: \"\",\r\n        password: \"\"\r\n      },\r\n      clicked: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const logininfo = LoadLoginInfo();\r\n    if (logininfo.email) {\r\n      this.setState({\r\n        email: logininfo.email,\r\n        password: logininfo.password,\r\n        rememberMe: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ toastOpen: false });\r\n  };\r\n  validation = () => {\r\n    const { email, password } = this.state;\r\n\r\n    const errors = {};\r\n    let isError = false;\r\n    if (!validator.isEmail(email)) {\r\n      isError = true;\r\n      errors.email = \"Invalid email\";\r\n    }\r\n    if (password.length < 6) {\r\n      isError = true;\r\n      errors.password = \"password must be more than 6 letters\";\r\n    }\r\n    this.setState({ errors: errors });\r\n    return !isError;\r\n  };\r\n\r\n  handleTextInput = input => e => {\r\n    this.setState({ [input]: e.target.value }, function() {\r\n      if (this.state.clicked) this.validation();\r\n    });\r\n  };\r\n\r\n  handleRememberMe = () => {\r\n    this.setState({ rememberMe: !this.state.rememberMe });\r\n  };\r\n  onSubmit = () => {\r\n    this.setState({ clicked: true });\r\n    if (!this.validation()) {\r\n      return;\r\n    }\r\n\r\n    if (this.state.rememberMe) {\r\n      saveLoginInfo(this.state.email, this.state.password);\r\n    } else {\r\n      saveLoginInfo(\"\", \"\");\r\n    }\r\n\r\n    const newUser = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    console.log(newUser);\r\n    this.props.loginUser(newUser, this.props.history);\r\n  };\r\n\r\n  loginUser = (userData, history) => {\r\n    this.props.dispatch({ type: types.USER_LOADING, payload: true });\r\n    axios\r\n      .request({\r\n        url: \"/api/users/login\",\r\n        baseURL: config.apiBaseUrl,\r\n        method: \"post\",\r\n        data: userData\r\n      })\r\n      .then(res => {\r\n        // Save to localStorage\r\n        // Set token to localStorage\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        // Set token to Auth header\r\n        setAuthToken(token);\r\n        // Decode token to get user data\r\n        const decoded = jwt_decode(token);\r\n        // Set current user\r\n        this.props.dispatch({\r\n          type: types.SET_CURRENT_USER,\r\n          payload: decoded\r\n        });\r\n        this.props.dispatch({ type: types.USER_LOADING, payload: false });\r\n        history.push(\"/dashboard\");\r\n      })\r\n      .catch(err => {\r\n        try {\r\n          if (err.response.data.title === \"Email\") {\r\n            NotificationManager.error(\"Email not found\");\r\n          }\r\n          if (err.response.data.title === \"Password\") {\r\n            NotificationManager.error(\"Password incorrect\");\r\n          }\r\n        } catch (err) {\r\n          NotificationManager.error(\"Server error\");\r\n        }\r\n        this.props.dispatch({ type: types.USER_LOADING, payload: false });\r\n      });\r\n  };\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode == 13) this.onSubmit();\r\n  };\r\n  render() {\r\n    const { email, password, errors, rememberMe } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.content}>\r\n        <FormGroup>\r\n          <TextField\r\n            required\r\n            id=\"email\"\r\n            label={t[this.props.lang].email}\r\n            type=\"email\"\r\n            placeholder={t[this.props.lang].enter_your_email}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.email ? true : false}\r\n            value={email}\r\n            onChange={this.handleTextInput(\"email\")}\r\n          />\r\n\r\n          <TextField\r\n            required\r\n            id=\"password\"\r\n            label={t[this.props.lang].password}\r\n            type=\"password\"\r\n            placeholder={t[this.props.lang].enter_your_password}\r\n            className={classes.textField}\r\n            margin=\"normal\"\r\n            error={errors.password ? true : false}\r\n            value={password}\r\n            onChange={this.handleTextInput(\"password\")}\r\n            onKeyDown={this.handleKeyDown}\r\n          />\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\"\r\n            }}\r\n          >\r\n            <FormControlLabel\r\n              className={classes.checkbox}\r\n              control={\r\n                <Checkbox\r\n                  checked={rememberMe}\r\n                  onChange={this.handleRememberMe}\r\n                  value=\"rememberMe\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label={t[this.props.lang].remember_me}\r\n            />\r\n\r\n            <a\r\n              href=\"/#/password_reset\"\r\n              target=\"_blank\"\r\n              className={classes.forgot}\r\n            >\r\n              {t[this.props.lang].forgot_password}\r\n            </a>\r\n          </div>\r\n        </FormGroup>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            justifyContent: \"center\",\r\n            paddingTop: 10\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={this.props.loading}\r\n            color=\"primary\"\r\n            onClick={this.onSubmit}\r\n            default\r\n          >\r\n            {/* {this.props.loading ? 'Loging in...' : 'Login'} */}\r\n            {t[this.props.lang].login}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  loading: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  loading: state.auth.loading,\r\n  lang: state.menu.lang\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(\r\n  withStyles(styles)(withRouter(Login))\r\n);\r\n"]},"metadata":{},"sourceType":"module"}