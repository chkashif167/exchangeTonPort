{"ast":null,"code":"var _jsxFileName = \"F:\\\\React\\\\upwork\\\\test\\\\src\\\\containers\\\\Auth\\\\forgotpassword\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport validator from \"validator\";\nimport Container from \"@material-ui/core/Container\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport config from \"../../../config/config\";\nimport { NotificationManager } from \"react-notifications\";\n\nconst styles = theme => ({\n  paper: {\n    padding: 20,\n    alignItems: 'center',\n    maxWidth: 400\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nclass ForgotPassword extends Component {\n  constructor() {\n    super();\n\n    this.validation = () => {\n      const email = this.state.email;\n      let is_valid = false;\n\n      if (validator.isEmail(email)) {\n        is_valid = true;\n      }\n\n      this.setState({\n        is_valid: is_valid\n      });\n      return is_valid;\n    };\n\n    this.handleTextInput = input => e => {\n      this.setState({\n        [input]: e.target.value\n      }, function () {\n        if (this.state.clicked) this.validation();\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        clicked: true\n      });\n\n      if (!this.validation()) {\n        return;\n      }\n\n      axios.request({\n        url: \"/api/users/forgotpassword\",\n        baseURL: config.apiBaseUrl,\n        method: \"POST\",\n        data: {\n          email: this.state.email\n        }\n      }).then(res => {\n        console.log(\"forgotpassword\", res);\n        NotificationManager.success(\"We sent a message to your email.\");\n      }).catch(err => {\n        console.log(\"forgotpassword err\", err);\n        NotificationManager.error(\"Failed. Please try again.\");\n      });\n    };\n\n    this.state = {\n      email: \"\",\n      is_valid: true,\n      clicked: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const _this$state = this.state,\n          email = _this$state.email,\n          is_valid = _this$state.is_valid;\n    const classes = this.props.classes;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Container, {\n      maxWidth: \"sm\",\n      className: classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Forgot \")), React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Enter your email address and we will send you a link to reset your password.\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      required: true,\n      id: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      placeholder: \"Enter your Email address\",\n      className: classes.textField,\n      margin: \"normal\",\n      error: !is_valid,\n      value: email,\n      onChange: this.handleTextInput(\"email\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        paddingTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      disabled: this.props.loading,\n      color: \"primary\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Send password reset email\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  lang: state.menu.lang\n});\n\nexport default withStyles(styles)(withRouter(ForgotPassword));","map":{"version":3,"sources":["F:/React/upwork/test/src/containers/Auth/forgotpassword/index.js"],"names":["React","Component","Link","withRouter","FormGroup","TextField","withStyles","Button","validator","Container","FormControlLabel","Paper","axios","config","NotificationManager","styles","theme","paper","padding","alignItems","maxWidth","container","display","flexDirection","justifyContent","ForgotPassword","constructor","validation","email","state","is_valid","isEmail","setState","handleTextInput","input","e","target","value","clicked","onSubmit","request","url","baseURL","apiBaseUrl","method","data","then","res","console","log","success","catch","err","error","componentDidMount","render","classes","props","textField","paddingTop","loading","mapStateToProps","lang","menu"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport validator from \"validator\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport axios from \"axios\";\r\nimport config from \"../../../config/config\";\r\nimport { NotificationManager } from \"react-notifications\";\r\n\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    maxWidth: 400,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n    alignItems: 'center',\r\n  }\r\n  \r\n});\r\nclass ForgotPassword extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      is_valid: true,\r\n      clicked: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  validation = () => {\r\n    const { email } = this.state;\r\n    let is_valid = false;\r\n    if (validator.isEmail(email)) {\r\n      is_valid = true;\r\n    }\r\n    this.setState({ is_valid: is_valid });\r\n    return is_valid;\r\n  };\r\n\r\n  handleTextInput = input => e => {\r\n    this.setState({ [input]: e.target.value }, function() {\r\n      if (this.state.clicked) this.validation();\r\n    });\r\n  };\r\n\r\n  onSubmit = () => {\r\n    this.setState({ clicked: true });\r\n    if (!this.validation()) {\r\n      return;\r\n    }\r\n\r\n    axios\r\n    .request({\r\n      url: \"/api/users/forgotpassword\",\r\n      baseURL: config.apiBaseUrl,\r\n      method: \"POST\",\r\n      data: {email: this.state.email}\r\n    })\r\n    .then(res => {\r\n      console.log(\"forgotpassword\", res);\r\n      NotificationManager.success(\"We sent a message to your email.\");\r\n    })\r\n    .catch(err => {\r\n      console.log(\"forgotpassword err\", err);\r\n      NotificationManager.error(\"Failed. Please try again.\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { email, is_valid } = this.state;\r\n    const { classes } = this.props;\r\n    return (\r\n      <div >\r\n      <Container maxWidth=\"sm\" className={classes.container}>\r\n        <div>\r\n          <h1>Forgot </h1>\r\n        </div>\r\n        <Paper className={classes.paper}>\r\n          <p>\r\n            Enter your email address and we will send you a link to reset your\r\n            password.\r\n          </p>\r\n          <FormGroup>\r\n            <TextField\r\n              required\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email address\"\r\n              className={classes.textField}\r\n              margin=\"normal\"\r\n              error={!is_valid}\r\n              value={email}\r\n              onChange={this.handleTextInput(\"email\")}\r\n            />\r\n          </FormGroup>\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"row\",\r\n              justifyContent: \"center\",\r\n              paddingTop: 10\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"contained\"\r\n              disabled={this.props.loading}\r\n              color=\"primary\"\r\n              onClick={this.onSubmit}\r\n            >\r\n              Send password reset email\r\n            </Button>\r\n          </div>\r\n        </Paper>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  lang: state.menu.lang\r\n});\r\n\r\nexport default withStyles(styles)(withRouter(ForgotPassword));\r\n"]},"metadata":{},"sourceType":"module"}